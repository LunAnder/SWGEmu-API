// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace swgemurpcserver.rpc {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class StructureDetails {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_SWGEmuStructureItemDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.SWGEmuStructureItemDetails, global::swgemurpcserver.rpc.SWGEmuStructureItemDetails.Builder> internal__static_swgemurpcserver_rpc_SWGEmuStructureItemDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_BuildingItemDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.BuildingItemDetails, global::swgemurpcserver.rpc.BuildingItemDetails.Builder> internal__static_swgemurpcserver_rpc_BuildingItemDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_InstallationItemDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.InstallationItemDetails, global::swgemurpcserver.rpc.InstallationItemDetails.Builder> internal__static_swgemurpcserver_rpc_InstallationItemDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_HarvesterItemDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.HarvesterItemDetails, global::swgemurpcserver.rpc.HarvesterItemDetails.Builder> internal__static_swgemurpcserver_rpc_HarvesterItemDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_FactoryItemDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.FactoryItemDetails, global::swgemurpcserver.rpc.FactoryItemDetails.Builder> internal__static_swgemurpcserver_rpc_FactoryItemDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_GetStructureItemDetailsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.GetStructureItemDetailsRequest, global::swgemurpcserver.rpc.GetStructureItemDetailsRequest.Builder> internal__static_swgemurpcserver_rpc_GetStructureItemDetailsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_GetStructureItemDetailsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.GetStructureItemDetailsResponse, global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.Builder> internal__static_swgemurpcserver_rpc_GetStructureItemDetailsResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static StructureDetails() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChZTdHJ1Y3R1cmVEZXRhaWxzLnByb3RvEhNzd2dlbXVycGNzZXJ2ZXIucnBj" + 
          "GhNJbnZlbnRvcnlJdGVtLnByb3RvIukDChpTV0dFbXVTdHJ1Y3R1cmVJdGVt" + 
          "RGV0YWlscxIRCglvYmplY3RfaWQYASACKAYSHAoUYXBwZWFyYW5jZV9maWxl" + 
          "X25hbWUYAiACKAkSEwoLb2JqZWN0X25hbWUYAyACKAkSFAoMZGlzcGxheV9u" + 
          "YW1lGAQgAigJEhoKEm93bmVyX2Rpc3BsYXlfbmFtZRgFIAIoCRIPCgd3b3Js" + 
          "ZF94GAYgASgCEg8KB3dvcmxkX3kYByABKAISDwoHd29ybGRfehgIIAEoAhIM" + 
          "CgR6b25lGAkgASgJEg0KBXBvd2VyGAogASgFEhMKC21haW50ZW5hbmNlGAsg" + 
          "ASgFEhUKDWRlY2F5X3BlcmNlbnQYDCABKAUSEAoIbG90X3NpemUYDSABKAUS" + 
          "GgoSdGVtcGxhdGVfZmlsZV9uYW1lGA4gASgJEhkKEXBvcnRhbHNfZmlsZV9u" + 
          "YW1lGA8gASgJEkIKEGJ1aWxkaW5nX2RldGFpbHMYFCABKAsyKC5zd2dlbXVy" + 
          "cGNzZXJ2ZXIucnBjLkJ1aWxkaW5nSXRlbURldGFpbHMSSgoUaW5zdGFsbGF0" + 
          "aW9uX2RldGFpbHMYFSABKAsyLC5zd2dlbXVycGNzZXJ2ZXIucnBjLkluc3Rh" + 
          "bGxhdGlvbkl0ZW1EZXRhaWxzIlsKE0J1aWxkaW5nSXRlbURldGFpbHMSRAoP" + 
          "Y29udGFpbmVkX2l0ZW1zGAEgAygLMisuc3dnZW11cnBjc2VydmVyLnJwYy5D" + 
          "aGFyYWN0ZXJJbnZlbnRvcnlJdGVtIqUCChdJbnN0YWxsYXRpb25JdGVtRGV0" + 
          "YWlscxIRCglvcGVyYXRpbmcYASACKAgSEwoLYWN0dWFsX3JhdGUYAiACKAIS" + 
          "FwoPbWF4X2hvcHBlcl9zaXplGAMgAigCEkQKEWhhcnZlc3Rlcl9kZXRhaWxz" + 
          "GAQgASgLMikuc3dnZW11cnBjc2VydmVyLnJwYy5IYXJ2ZXN0ZXJJdGVtRGV0" + 
          "YWlscxJACg9mYWN0b3J5X2RldGFpbHMYBSABKAsyJy5zd2dlbXVycGNzZXJ2" + 
          "ZXIucnBjLkZhY3RvcnlJdGVtRGV0YWlscxJBCgxob3BwZXJfaXRlbXMYCiAD" + 
          "KAsyKy5zd2dlbXVycGNzZXJ2ZXIucnBjLkNoYXJhY3RlckludmVudG9yeUl0" + 
          "ZW0iLwoUSGFydmVzdGVySXRlbURldGFpbHMSFwoPZXh0cmFjdGlvbl9yYXRl" + 
          "GAEgAigCIpsBChJGYWN0b3J5SXRlbURldGFpbHMSPgoJc2NoZW1hdGljGAEg" + 
          "ASgLMisuc3dnZW11cnBjc2VydmVyLnJwYy5DaGFyYWN0ZXJJbnZlbnRvcnlJ" + 
          "dGVtEkUKEGluZ3JlZGllbnRfaXRlbXMYCiADKAsyKy5zd2dlbXVycGNzZXJ2" + 
          "ZXIucnBjLkNoYXJhY3RlckludmVudG9yeUl0ZW0iTAoeR2V0U3RydWN0dXJl" + 
          "SXRlbURldGFpbHNSZXF1ZXN0EhEKCW9iamVjdF9pZBgBIAIoBhIXCg9vd25l" + 
          "cl9vYmplY3RfaWQYAiABKAYiZgofR2V0U3RydWN0dXJlSXRlbURldGFpbHNS" + 
          "ZXNwb25zZRJDCgpzdHJ1Y3R1cmVzGAEgAygLMi8uc3dnZW11cnBjc2VydmVy" + 
          "LnJwYy5TV0dFbXVTdHJ1Y3R1cmVJdGVtRGV0YWlsczKqAQohU1dHRW11U3Ry" + 
          "dWN0dXJlSXRlbURldGFpbHNTZXJ2aWNlEoQBChdHZXRTdHJ1Y3R1cmVJdGVt" + 
          "RGV0YWlscxIzLnN3Z2VtdXJwY3NlcnZlci5ycGMuR2V0U3RydWN0dXJlSXRl" + 
          "bURldGFpbHNSZXF1ZXN0GjQuc3dnZW11cnBjc2VydmVyLnJwYy5HZXRTdHJ1" + 
          "Y3R1cmVJdGVtRGV0YWlsc1Jlc3BvbnNlQgOAAQE=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_swgemurpcserver_rpc_SWGEmuStructureItemDetails__Descriptor = Descriptor.MessageTypes[0];
        internal__static_swgemurpcserver_rpc_SWGEmuStructureItemDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.SWGEmuStructureItemDetails, global::swgemurpcserver.rpc.SWGEmuStructureItemDetails.Builder>(internal__static_swgemurpcserver_rpc_SWGEmuStructureItemDetails__Descriptor,
                new string[] { "ObjectId", "AppearanceFileName", "ObjectName", "DisplayName", "OwnerDisplayName", "WorldX", "WorldY", "WorldZ", "Zone", "Power", "Maintenance", "DecayPercent", "LotSize", "TemplateFileName", "PortalsFileName", "BuildingDetails", "InstallationDetails", });
        internal__static_swgemurpcserver_rpc_BuildingItemDetails__Descriptor = Descriptor.MessageTypes[1];
        internal__static_swgemurpcserver_rpc_BuildingItemDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.BuildingItemDetails, global::swgemurpcserver.rpc.BuildingItemDetails.Builder>(internal__static_swgemurpcserver_rpc_BuildingItemDetails__Descriptor,
                new string[] { "ContainedItems", });
        internal__static_swgemurpcserver_rpc_InstallationItemDetails__Descriptor = Descriptor.MessageTypes[2];
        internal__static_swgemurpcserver_rpc_InstallationItemDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.InstallationItemDetails, global::swgemurpcserver.rpc.InstallationItemDetails.Builder>(internal__static_swgemurpcserver_rpc_InstallationItemDetails__Descriptor,
                new string[] { "Operating", "ActualRate", "MaxHopperSize", "HarvesterDetails", "FactoryDetails", "HopperItems", });
        internal__static_swgemurpcserver_rpc_HarvesterItemDetails__Descriptor = Descriptor.MessageTypes[3];
        internal__static_swgemurpcserver_rpc_HarvesterItemDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.HarvesterItemDetails, global::swgemurpcserver.rpc.HarvesterItemDetails.Builder>(internal__static_swgemurpcserver_rpc_HarvesterItemDetails__Descriptor,
                new string[] { "ExtractionRate", });
        internal__static_swgemurpcserver_rpc_FactoryItemDetails__Descriptor = Descriptor.MessageTypes[4];
        internal__static_swgemurpcserver_rpc_FactoryItemDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.FactoryItemDetails, global::swgemurpcserver.rpc.FactoryItemDetails.Builder>(internal__static_swgemurpcserver_rpc_FactoryItemDetails__Descriptor,
                new string[] { "Schematic", "IngredientItems", });
        internal__static_swgemurpcserver_rpc_GetStructureItemDetailsRequest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_swgemurpcserver_rpc_GetStructureItemDetailsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.GetStructureItemDetailsRequest, global::swgemurpcserver.rpc.GetStructureItemDetailsRequest.Builder>(internal__static_swgemurpcserver_rpc_GetStructureItemDetailsRequest__Descriptor,
                new string[] { "ObjectId", "OwnerObjectId", });
        internal__static_swgemurpcserver_rpc_GetStructureItemDetailsResponse__Descriptor = Descriptor.MessageTypes[6];
        internal__static_swgemurpcserver_rpc_GetStructureItemDetailsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.GetStructureItemDetailsResponse, global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.Builder>(internal__static_swgemurpcserver_rpc_GetStructureItemDetailsResponse__Descriptor,
                new string[] { "Structures", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::swgemurpcserver.rpc.InventoryItem.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SWGEmuStructureItemDetails : pb::GeneratedMessage<SWGEmuStructureItemDetails, SWGEmuStructureItemDetails.Builder> {
    private SWGEmuStructureItemDetails() { }
    private static readonly SWGEmuStructureItemDetails defaultInstance = new SWGEmuStructureItemDetails().MakeReadOnly();
    private static readonly string[] _sWGEmuStructureItemDetailsFieldNames = new string[] { "appearance_file_name", "building_details", "decay_percent", "display_name", "installation_details", "lot_size", "maintenance", "object_id", "object_name", "owner_display_name", "portals_file_name", "power", "template_file_name", "world_x", "world_y", "world_z", "zone" };
    private static readonly uint[] _sWGEmuStructureItemDetailsFieldTags = new uint[] { 18, 162, 96, 34, 170, 104, 88, 9, 26, 42, 122, 80, 114, 53, 61, 69, 74 };
    public static SWGEmuStructureItemDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SWGEmuStructureItemDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SWGEmuStructureItemDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_SWGEmuStructureItemDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SWGEmuStructureItemDetails, SWGEmuStructureItemDetails.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_SWGEmuStructureItemDetails__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int AppearanceFileNameFieldNumber = 2;
    private bool hasAppearanceFileName;
    private string appearanceFileName_ = "";
    public bool HasAppearanceFileName {
      get { return hasAppearanceFileName; }
    }
    public string AppearanceFileName {
      get { return appearanceFileName_; }
    }
    
    public const int ObjectNameFieldNumber = 3;
    private bool hasObjectName;
    private string objectName_ = "";
    public bool HasObjectName {
      get { return hasObjectName; }
    }
    public string ObjectName {
      get { return objectName_; }
    }
    
    public const int DisplayNameFieldNumber = 4;
    private bool hasDisplayName;
    private string displayName_ = "";
    public bool HasDisplayName {
      get { return hasDisplayName; }
    }
    public string DisplayName {
      get { return displayName_; }
    }
    
    public const int OwnerDisplayNameFieldNumber = 5;
    private bool hasOwnerDisplayName;
    private string ownerDisplayName_ = "";
    public bool HasOwnerDisplayName {
      get { return hasOwnerDisplayName; }
    }
    public string OwnerDisplayName {
      get { return ownerDisplayName_; }
    }
    
    public const int WorldXFieldNumber = 6;
    private bool hasWorldX;
    private float worldX_;
    public bool HasWorldX {
      get { return hasWorldX; }
    }
    public float WorldX {
      get { return worldX_; }
    }
    
    public const int WorldYFieldNumber = 7;
    private bool hasWorldY;
    private float worldY_;
    public bool HasWorldY {
      get { return hasWorldY; }
    }
    public float WorldY {
      get { return worldY_; }
    }
    
    public const int WorldZFieldNumber = 8;
    private bool hasWorldZ;
    private float worldZ_;
    public bool HasWorldZ {
      get { return hasWorldZ; }
    }
    public float WorldZ {
      get { return worldZ_; }
    }
    
    public const int ZoneFieldNumber = 9;
    private bool hasZone;
    private string zone_ = "";
    public bool HasZone {
      get { return hasZone; }
    }
    public string Zone {
      get { return zone_; }
    }
    
    public const int PowerFieldNumber = 10;
    private bool hasPower;
    private int power_;
    public bool HasPower {
      get { return hasPower; }
    }
    public int Power {
      get { return power_; }
    }
    
    public const int MaintenanceFieldNumber = 11;
    private bool hasMaintenance;
    private int maintenance_;
    public bool HasMaintenance {
      get { return hasMaintenance; }
    }
    public int Maintenance {
      get { return maintenance_; }
    }
    
    public const int DecayPercentFieldNumber = 12;
    private bool hasDecayPercent;
    private int decayPercent_;
    public bool HasDecayPercent {
      get { return hasDecayPercent; }
    }
    public int DecayPercent {
      get { return decayPercent_; }
    }
    
    public const int LotSizeFieldNumber = 13;
    private bool hasLotSize;
    private int lotSize_;
    public bool HasLotSize {
      get { return hasLotSize; }
    }
    public int LotSize {
      get { return lotSize_; }
    }
    
    public const int TemplateFileNameFieldNumber = 14;
    private bool hasTemplateFileName;
    private string templateFileName_ = "";
    public bool HasTemplateFileName {
      get { return hasTemplateFileName; }
    }
    public string TemplateFileName {
      get { return templateFileName_; }
    }
    
    public const int PortalsFileNameFieldNumber = 15;
    private bool hasPortalsFileName;
    private string portalsFileName_ = "";
    public bool HasPortalsFileName {
      get { return hasPortalsFileName; }
    }
    public string PortalsFileName {
      get { return portalsFileName_; }
    }
    
    public const int BuildingDetailsFieldNumber = 20;
    private bool hasBuildingDetails;
    private global::swgemurpcserver.rpc.BuildingItemDetails buildingDetails_;
    public bool HasBuildingDetails {
      get { return hasBuildingDetails; }
    }
    public global::swgemurpcserver.rpc.BuildingItemDetails BuildingDetails {
      get { return buildingDetails_ ?? global::swgemurpcserver.rpc.BuildingItemDetails.DefaultInstance; }
    }
    
    public const int InstallationDetailsFieldNumber = 21;
    private bool hasInstallationDetails;
    private global::swgemurpcserver.rpc.InstallationItemDetails installationDetails_;
    public bool HasInstallationDetails {
      get { return hasInstallationDetails; }
    }
    public global::swgemurpcserver.rpc.InstallationItemDetails InstallationDetails {
      get { return installationDetails_ ?? global::swgemurpcserver.rpc.InstallationItemDetails.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        if (!hasAppearanceFileName) return false;
        if (!hasObjectName) return false;
        if (!hasDisplayName) return false;
        if (!hasOwnerDisplayName) return false;
        if (HasBuildingDetails) {
          if (!BuildingDetails.IsInitialized) return false;
        }
        if (HasInstallationDetails) {
          if (!InstallationDetails.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sWGEmuStructureItemDetailsFieldNames;
      if (hasObjectId) {
        output.WriteFixed64(1, field_names[7], ObjectId);
      }
      if (hasAppearanceFileName) {
        output.WriteString(2, field_names[0], AppearanceFileName);
      }
      if (hasObjectName) {
        output.WriteString(3, field_names[8], ObjectName);
      }
      if (hasDisplayName) {
        output.WriteString(4, field_names[3], DisplayName);
      }
      if (hasOwnerDisplayName) {
        output.WriteString(5, field_names[9], OwnerDisplayName);
      }
      if (hasWorldX) {
        output.WriteFloat(6, field_names[13], WorldX);
      }
      if (hasWorldY) {
        output.WriteFloat(7, field_names[14], WorldY);
      }
      if (hasWorldZ) {
        output.WriteFloat(8, field_names[15], WorldZ);
      }
      if (hasZone) {
        output.WriteString(9, field_names[16], Zone);
      }
      if (hasPower) {
        output.WriteInt32(10, field_names[11], Power);
      }
      if (hasMaintenance) {
        output.WriteInt32(11, field_names[6], Maintenance);
      }
      if (hasDecayPercent) {
        output.WriteInt32(12, field_names[2], DecayPercent);
      }
      if (hasLotSize) {
        output.WriteInt32(13, field_names[5], LotSize);
      }
      if (hasTemplateFileName) {
        output.WriteString(14, field_names[12], TemplateFileName);
      }
      if (hasPortalsFileName) {
        output.WriteString(15, field_names[10], PortalsFileName);
      }
      if (hasBuildingDetails) {
        output.WriteMessage(20, field_names[1], BuildingDetails);
      }
      if (hasInstallationDetails) {
        output.WriteMessage(21, field_names[4], InstallationDetails);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, ObjectId);
        }
        if (hasAppearanceFileName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, AppearanceFileName);
        }
        if (hasObjectName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ObjectName);
        }
        if (hasDisplayName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, DisplayName);
        }
        if (hasOwnerDisplayName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, OwnerDisplayName);
        }
        if (hasWorldX) {
          size += pb::CodedOutputStream.ComputeFloatSize(6, WorldX);
        }
        if (hasWorldY) {
          size += pb::CodedOutputStream.ComputeFloatSize(7, WorldY);
        }
        if (hasWorldZ) {
          size += pb::CodedOutputStream.ComputeFloatSize(8, WorldZ);
        }
        if (hasZone) {
          size += pb::CodedOutputStream.ComputeStringSize(9, Zone);
        }
        if (hasPower) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, Power);
        }
        if (hasMaintenance) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, Maintenance);
        }
        if (hasDecayPercent) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, DecayPercent);
        }
        if (hasLotSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(13, LotSize);
        }
        if (hasTemplateFileName) {
          size += pb::CodedOutputStream.ComputeStringSize(14, TemplateFileName);
        }
        if (hasPortalsFileName) {
          size += pb::CodedOutputStream.ComputeStringSize(15, PortalsFileName);
        }
        if (hasBuildingDetails) {
          size += pb::CodedOutputStream.ComputeMessageSize(20, BuildingDetails);
        }
        if (hasInstallationDetails) {
          size += pb::CodedOutputStream.ComputeMessageSize(21, InstallationDetails);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SWGEmuStructureItemDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SWGEmuStructureItemDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SWGEmuStructureItemDetails MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SWGEmuStructureItemDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SWGEmuStructureItemDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SWGEmuStructureItemDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SWGEmuStructureItemDetails result;
      
      private SWGEmuStructureItemDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          SWGEmuStructureItemDetails original = result;
          result = new SWGEmuStructureItemDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SWGEmuStructureItemDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.SWGEmuStructureItemDetails.Descriptor; }
      }
      
      public override SWGEmuStructureItemDetails DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.SWGEmuStructureItemDetails.DefaultInstance; }
      }
      
      public override SWGEmuStructureItemDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SWGEmuStructureItemDetails) {
          return MergeFrom((SWGEmuStructureItemDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SWGEmuStructureItemDetails other) {
        if (other == global::swgemurpcserver.rpc.SWGEmuStructureItemDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        if (other.HasAppearanceFileName) {
          AppearanceFileName = other.AppearanceFileName;
        }
        if (other.HasObjectName) {
          ObjectName = other.ObjectName;
        }
        if (other.HasDisplayName) {
          DisplayName = other.DisplayName;
        }
        if (other.HasOwnerDisplayName) {
          OwnerDisplayName = other.OwnerDisplayName;
        }
        if (other.HasWorldX) {
          WorldX = other.WorldX;
        }
        if (other.HasWorldY) {
          WorldY = other.WorldY;
        }
        if (other.HasWorldZ) {
          WorldZ = other.WorldZ;
        }
        if (other.HasZone) {
          Zone = other.Zone;
        }
        if (other.HasPower) {
          Power = other.Power;
        }
        if (other.HasMaintenance) {
          Maintenance = other.Maintenance;
        }
        if (other.HasDecayPercent) {
          DecayPercent = other.DecayPercent;
        }
        if (other.HasLotSize) {
          LotSize = other.LotSize;
        }
        if (other.HasTemplateFileName) {
          TemplateFileName = other.TemplateFileName;
        }
        if (other.HasPortalsFileName) {
          PortalsFileName = other.PortalsFileName;
        }
        if (other.HasBuildingDetails) {
          MergeBuildingDetails(other.BuildingDetails);
        }
        if (other.HasInstallationDetails) {
          MergeInstallationDetails(other.InstallationDetails);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sWGEmuStructureItemDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sWGEmuStructureItemDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasObjectId = input.ReadFixed64(ref result.objectId_);
              break;
            }
            case 18: {
              result.hasAppearanceFileName = input.ReadString(ref result.appearanceFileName_);
              break;
            }
            case 26: {
              result.hasObjectName = input.ReadString(ref result.objectName_);
              break;
            }
            case 34: {
              result.hasDisplayName = input.ReadString(ref result.displayName_);
              break;
            }
            case 42: {
              result.hasOwnerDisplayName = input.ReadString(ref result.ownerDisplayName_);
              break;
            }
            case 53: {
              result.hasWorldX = input.ReadFloat(ref result.worldX_);
              break;
            }
            case 61: {
              result.hasWorldY = input.ReadFloat(ref result.worldY_);
              break;
            }
            case 69: {
              result.hasWorldZ = input.ReadFloat(ref result.worldZ_);
              break;
            }
            case 74: {
              result.hasZone = input.ReadString(ref result.zone_);
              break;
            }
            case 80: {
              result.hasPower = input.ReadInt32(ref result.power_);
              break;
            }
            case 88: {
              result.hasMaintenance = input.ReadInt32(ref result.maintenance_);
              break;
            }
            case 96: {
              result.hasDecayPercent = input.ReadInt32(ref result.decayPercent_);
              break;
            }
            case 104: {
              result.hasLotSize = input.ReadInt32(ref result.lotSize_);
              break;
            }
            case 114: {
              result.hasTemplateFileName = input.ReadString(ref result.templateFileName_);
              break;
            }
            case 122: {
              result.hasPortalsFileName = input.ReadString(ref result.portalsFileName_);
              break;
            }
            case 162: {
              global::swgemurpcserver.rpc.BuildingItemDetails.Builder subBuilder = global::swgemurpcserver.rpc.BuildingItemDetails.CreateBuilder();
              if (result.hasBuildingDetails) {
                subBuilder.MergeFrom(BuildingDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BuildingDetails = subBuilder.BuildPartial();
              break;
            }
            case 170: {
              global::swgemurpcserver.rpc.InstallationItemDetails.Builder subBuilder = global::swgemurpcserver.rpc.InstallationItemDetails.CreateBuilder();
              if (result.hasInstallationDetails) {
                subBuilder.MergeFrom(InstallationDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InstallationDetails = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0;
        return this;
      }
      
      public bool HasAppearanceFileName {
        get { return result.hasAppearanceFileName; }
      }
      public string AppearanceFileName {
        get { return result.AppearanceFileName; }
        set { SetAppearanceFileName(value); }
      }
      public Builder SetAppearanceFileName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAppearanceFileName = true;
        result.appearanceFileName_ = value;
        return this;
      }
      public Builder ClearAppearanceFileName() {
        PrepareBuilder();
        result.hasAppearanceFileName = false;
        result.appearanceFileName_ = "";
        return this;
      }
      
      public bool HasObjectName {
        get { return result.hasObjectName; }
      }
      public string ObjectName {
        get { return result.ObjectName; }
        set { SetObjectName(value); }
      }
      public Builder SetObjectName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasObjectName = true;
        result.objectName_ = value;
        return this;
      }
      public Builder ClearObjectName() {
        PrepareBuilder();
        result.hasObjectName = false;
        result.objectName_ = "";
        return this;
      }
      
      public bool HasDisplayName {
        get { return result.hasDisplayName; }
      }
      public string DisplayName {
        get { return result.DisplayName; }
        set { SetDisplayName(value); }
      }
      public Builder SetDisplayName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDisplayName = true;
        result.displayName_ = value;
        return this;
      }
      public Builder ClearDisplayName() {
        PrepareBuilder();
        result.hasDisplayName = false;
        result.displayName_ = "";
        return this;
      }
      
      public bool HasOwnerDisplayName {
        get { return result.hasOwnerDisplayName; }
      }
      public string OwnerDisplayName {
        get { return result.OwnerDisplayName; }
        set { SetOwnerDisplayName(value); }
      }
      public Builder SetOwnerDisplayName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOwnerDisplayName = true;
        result.ownerDisplayName_ = value;
        return this;
      }
      public Builder ClearOwnerDisplayName() {
        PrepareBuilder();
        result.hasOwnerDisplayName = false;
        result.ownerDisplayName_ = "";
        return this;
      }
      
      public bool HasWorldX {
        get { return result.hasWorldX; }
      }
      public float WorldX {
        get { return result.WorldX; }
        set { SetWorldX(value); }
      }
      public Builder SetWorldX(float value) {
        PrepareBuilder();
        result.hasWorldX = true;
        result.worldX_ = value;
        return this;
      }
      public Builder ClearWorldX() {
        PrepareBuilder();
        result.hasWorldX = false;
        result.worldX_ = 0F;
        return this;
      }
      
      public bool HasWorldY {
        get { return result.hasWorldY; }
      }
      public float WorldY {
        get { return result.WorldY; }
        set { SetWorldY(value); }
      }
      public Builder SetWorldY(float value) {
        PrepareBuilder();
        result.hasWorldY = true;
        result.worldY_ = value;
        return this;
      }
      public Builder ClearWorldY() {
        PrepareBuilder();
        result.hasWorldY = false;
        result.worldY_ = 0F;
        return this;
      }
      
      public bool HasWorldZ {
        get { return result.hasWorldZ; }
      }
      public float WorldZ {
        get { return result.WorldZ; }
        set { SetWorldZ(value); }
      }
      public Builder SetWorldZ(float value) {
        PrepareBuilder();
        result.hasWorldZ = true;
        result.worldZ_ = value;
        return this;
      }
      public Builder ClearWorldZ() {
        PrepareBuilder();
        result.hasWorldZ = false;
        result.worldZ_ = 0F;
        return this;
      }
      
      public bool HasZone {
        get { return result.hasZone; }
      }
      public string Zone {
        get { return result.Zone; }
        set { SetZone(value); }
      }
      public Builder SetZone(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasZone = true;
        result.zone_ = value;
        return this;
      }
      public Builder ClearZone() {
        PrepareBuilder();
        result.hasZone = false;
        result.zone_ = "";
        return this;
      }
      
      public bool HasPower {
        get { return result.hasPower; }
      }
      public int Power {
        get { return result.Power; }
        set { SetPower(value); }
      }
      public Builder SetPower(int value) {
        PrepareBuilder();
        result.hasPower = true;
        result.power_ = value;
        return this;
      }
      public Builder ClearPower() {
        PrepareBuilder();
        result.hasPower = false;
        result.power_ = 0;
        return this;
      }
      
      public bool HasMaintenance {
        get { return result.hasMaintenance; }
      }
      public int Maintenance {
        get { return result.Maintenance; }
        set { SetMaintenance(value); }
      }
      public Builder SetMaintenance(int value) {
        PrepareBuilder();
        result.hasMaintenance = true;
        result.maintenance_ = value;
        return this;
      }
      public Builder ClearMaintenance() {
        PrepareBuilder();
        result.hasMaintenance = false;
        result.maintenance_ = 0;
        return this;
      }
      
      public bool HasDecayPercent {
        get { return result.hasDecayPercent; }
      }
      public int DecayPercent {
        get { return result.DecayPercent; }
        set { SetDecayPercent(value); }
      }
      public Builder SetDecayPercent(int value) {
        PrepareBuilder();
        result.hasDecayPercent = true;
        result.decayPercent_ = value;
        return this;
      }
      public Builder ClearDecayPercent() {
        PrepareBuilder();
        result.hasDecayPercent = false;
        result.decayPercent_ = 0;
        return this;
      }
      
      public bool HasLotSize {
        get { return result.hasLotSize; }
      }
      public int LotSize {
        get { return result.LotSize; }
        set { SetLotSize(value); }
      }
      public Builder SetLotSize(int value) {
        PrepareBuilder();
        result.hasLotSize = true;
        result.lotSize_ = value;
        return this;
      }
      public Builder ClearLotSize() {
        PrepareBuilder();
        result.hasLotSize = false;
        result.lotSize_ = 0;
        return this;
      }
      
      public bool HasTemplateFileName {
        get { return result.hasTemplateFileName; }
      }
      public string TemplateFileName {
        get { return result.TemplateFileName; }
        set { SetTemplateFileName(value); }
      }
      public Builder SetTemplateFileName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTemplateFileName = true;
        result.templateFileName_ = value;
        return this;
      }
      public Builder ClearTemplateFileName() {
        PrepareBuilder();
        result.hasTemplateFileName = false;
        result.templateFileName_ = "";
        return this;
      }
      
      public bool HasPortalsFileName {
        get { return result.hasPortalsFileName; }
      }
      public string PortalsFileName {
        get { return result.PortalsFileName; }
        set { SetPortalsFileName(value); }
      }
      public Builder SetPortalsFileName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPortalsFileName = true;
        result.portalsFileName_ = value;
        return this;
      }
      public Builder ClearPortalsFileName() {
        PrepareBuilder();
        result.hasPortalsFileName = false;
        result.portalsFileName_ = "";
        return this;
      }
      
      public bool HasBuildingDetails {
       get { return result.hasBuildingDetails; }
      }
      public global::swgemurpcserver.rpc.BuildingItemDetails BuildingDetails {
        get { return result.BuildingDetails; }
        set { SetBuildingDetails(value); }
      }
      public Builder SetBuildingDetails(global::swgemurpcserver.rpc.BuildingItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBuildingDetails = true;
        result.buildingDetails_ = value;
        return this;
      }
      public Builder SetBuildingDetails(global::swgemurpcserver.rpc.BuildingItemDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBuildingDetails = true;
        result.buildingDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBuildingDetails(global::swgemurpcserver.rpc.BuildingItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBuildingDetails &&
            result.buildingDetails_ != global::swgemurpcserver.rpc.BuildingItemDetails.DefaultInstance) {
            result.buildingDetails_ = global::swgemurpcserver.rpc.BuildingItemDetails.CreateBuilder(result.buildingDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.buildingDetails_ = value;
        }
        result.hasBuildingDetails = true;
        return this;
      }
      public Builder ClearBuildingDetails() {
        PrepareBuilder();
        result.hasBuildingDetails = false;
        result.buildingDetails_ = null;
        return this;
      }
      
      public bool HasInstallationDetails {
       get { return result.hasInstallationDetails; }
      }
      public global::swgemurpcserver.rpc.InstallationItemDetails InstallationDetails {
        get { return result.InstallationDetails; }
        set { SetInstallationDetails(value); }
      }
      public Builder SetInstallationDetails(global::swgemurpcserver.rpc.InstallationItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInstallationDetails = true;
        result.installationDetails_ = value;
        return this;
      }
      public Builder SetInstallationDetails(global::swgemurpcserver.rpc.InstallationItemDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInstallationDetails = true;
        result.installationDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInstallationDetails(global::swgemurpcserver.rpc.InstallationItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInstallationDetails &&
            result.installationDetails_ != global::swgemurpcserver.rpc.InstallationItemDetails.DefaultInstance) {
            result.installationDetails_ = global::swgemurpcserver.rpc.InstallationItemDetails.CreateBuilder(result.installationDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.installationDetails_ = value;
        }
        result.hasInstallationDetails = true;
        return this;
      }
      public Builder ClearInstallationDetails() {
        PrepareBuilder();
        result.hasInstallationDetails = false;
        result.installationDetails_ = null;
        return this;
      }
    }
    static SWGEmuStructureItemDetails() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.StructureDetails.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BuildingItemDetails : pb::GeneratedMessage<BuildingItemDetails, BuildingItemDetails.Builder> {
    private BuildingItemDetails() { }
    private static readonly BuildingItemDetails defaultInstance = new BuildingItemDetails().MakeReadOnly();
    private static readonly string[] _buildingItemDetailsFieldNames = new string[] { "contained_items" };
    private static readonly uint[] _buildingItemDetailsFieldTags = new uint[] { 10 };
    public static BuildingItemDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BuildingItemDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BuildingItemDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_BuildingItemDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BuildingItemDetails, BuildingItemDetails.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_BuildingItemDetails__FieldAccessorTable; }
    }
    
    public const int ContainedItemsFieldNumber = 1;
    private pbc::PopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem> containedItems_ = new pbc::PopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem>();
    public scg::IList<global::swgemurpcserver.rpc.CharacterInventoryItem> ContainedItemsList {
      get { return containedItems_; }
    }
    public int ContainedItemsCount {
      get { return containedItems_.Count; }
    }
    public global::swgemurpcserver.rpc.CharacterInventoryItem GetContainedItems(int index) {
      return containedItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::swgemurpcserver.rpc.CharacterInventoryItem element in ContainedItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _buildingItemDetailsFieldNames;
      if (containedItems_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], containedItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::swgemurpcserver.rpc.CharacterInventoryItem element in ContainedItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BuildingItemDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BuildingItemDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BuildingItemDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BuildingItemDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BuildingItemDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BuildingItemDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BuildingItemDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BuildingItemDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BuildingItemDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BuildingItemDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BuildingItemDetails MakeReadOnly() {
      containedItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BuildingItemDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BuildingItemDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BuildingItemDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BuildingItemDetails result;
      
      private BuildingItemDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          BuildingItemDetails original = result;
          result = new BuildingItemDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BuildingItemDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.BuildingItemDetails.Descriptor; }
      }
      
      public override BuildingItemDetails DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.BuildingItemDetails.DefaultInstance; }
      }
      
      public override BuildingItemDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BuildingItemDetails) {
          return MergeFrom((BuildingItemDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BuildingItemDetails other) {
        if (other == global::swgemurpcserver.rpc.BuildingItemDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.containedItems_.Count != 0) {
          result.containedItems_.Add(other.containedItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_buildingItemDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _buildingItemDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.containedItems_, global::swgemurpcserver.rpc.CharacterInventoryItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem> ContainedItemsList {
        get { return PrepareBuilder().containedItems_; }
      }
      public int ContainedItemsCount {
        get { return result.ContainedItemsCount; }
      }
      public global::swgemurpcserver.rpc.CharacterInventoryItem GetContainedItems(int index) {
        return result.GetContainedItems(index);
      }
      public Builder SetContainedItems(int index, global::swgemurpcserver.rpc.CharacterInventoryItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.containedItems_[index] = value;
        return this;
      }
      public Builder SetContainedItems(int index, global::swgemurpcserver.rpc.CharacterInventoryItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.containedItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddContainedItems(global::swgemurpcserver.rpc.CharacterInventoryItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.containedItems_.Add(value);
        return this;
      }
      public Builder AddContainedItems(global::swgemurpcserver.rpc.CharacterInventoryItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.containedItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeContainedItems(scg::IEnumerable<global::swgemurpcserver.rpc.CharacterInventoryItem> values) {
        PrepareBuilder();
        result.containedItems_.Add(values);
        return this;
      }
      public Builder ClearContainedItems() {
        PrepareBuilder();
        result.containedItems_.Clear();
        return this;
      }
    }
    static BuildingItemDetails() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.StructureDetails.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InstallationItemDetails : pb::GeneratedMessage<InstallationItemDetails, InstallationItemDetails.Builder> {
    private InstallationItemDetails() { }
    private static readonly InstallationItemDetails defaultInstance = new InstallationItemDetails().MakeReadOnly();
    private static readonly string[] _installationItemDetailsFieldNames = new string[] { "actual_rate", "factory_details", "harvester_details", "hopper_items", "max_hopper_size", "operating" };
    private static readonly uint[] _installationItemDetailsFieldTags = new uint[] { 21, 42, 34, 82, 29, 8 };
    public static InstallationItemDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InstallationItemDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InstallationItemDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_InstallationItemDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InstallationItemDetails, InstallationItemDetails.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_InstallationItemDetails__FieldAccessorTable; }
    }
    
    public const int OperatingFieldNumber = 1;
    private bool hasOperating;
    private bool operating_;
    public bool HasOperating {
      get { return hasOperating; }
    }
    public bool Operating {
      get { return operating_; }
    }
    
    public const int ActualRateFieldNumber = 2;
    private bool hasActualRate;
    private float actualRate_;
    public bool HasActualRate {
      get { return hasActualRate; }
    }
    public float ActualRate {
      get { return actualRate_; }
    }
    
    public const int MaxHopperSizeFieldNumber = 3;
    private bool hasMaxHopperSize;
    private float maxHopperSize_;
    public bool HasMaxHopperSize {
      get { return hasMaxHopperSize; }
    }
    public float MaxHopperSize {
      get { return maxHopperSize_; }
    }
    
    public const int HarvesterDetailsFieldNumber = 4;
    private bool hasHarvesterDetails;
    private global::swgemurpcserver.rpc.HarvesterItemDetails harvesterDetails_;
    public bool HasHarvesterDetails {
      get { return hasHarvesterDetails; }
    }
    public global::swgemurpcserver.rpc.HarvesterItemDetails HarvesterDetails {
      get { return harvesterDetails_ ?? global::swgemurpcserver.rpc.HarvesterItemDetails.DefaultInstance; }
    }
    
    public const int FactoryDetailsFieldNumber = 5;
    private bool hasFactoryDetails;
    private global::swgemurpcserver.rpc.FactoryItemDetails factoryDetails_;
    public bool HasFactoryDetails {
      get { return hasFactoryDetails; }
    }
    public global::swgemurpcserver.rpc.FactoryItemDetails FactoryDetails {
      get { return factoryDetails_ ?? global::swgemurpcserver.rpc.FactoryItemDetails.DefaultInstance; }
    }
    
    public const int HopperItemsFieldNumber = 10;
    private pbc::PopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem> hopperItems_ = new pbc::PopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem>();
    public scg::IList<global::swgemurpcserver.rpc.CharacterInventoryItem> HopperItemsList {
      get { return hopperItems_; }
    }
    public int HopperItemsCount {
      get { return hopperItems_.Count; }
    }
    public global::swgemurpcserver.rpc.CharacterInventoryItem GetHopperItems(int index) {
      return hopperItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOperating) return false;
        if (!hasActualRate) return false;
        if (!hasMaxHopperSize) return false;
        if (HasHarvesterDetails) {
          if (!HarvesterDetails.IsInitialized) return false;
        }
        if (HasFactoryDetails) {
          if (!FactoryDetails.IsInitialized) return false;
        }
        foreach (global::swgemurpcserver.rpc.CharacterInventoryItem element in HopperItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _installationItemDetailsFieldNames;
      if (hasOperating) {
        output.WriteBool(1, field_names[5], Operating);
      }
      if (hasActualRate) {
        output.WriteFloat(2, field_names[0], ActualRate);
      }
      if (hasMaxHopperSize) {
        output.WriteFloat(3, field_names[4], MaxHopperSize);
      }
      if (hasHarvesterDetails) {
        output.WriteMessage(4, field_names[2], HarvesterDetails);
      }
      if (hasFactoryDetails) {
        output.WriteMessage(5, field_names[1], FactoryDetails);
      }
      if (hopperItems_.Count > 0) {
        output.WriteMessageArray(10, field_names[3], hopperItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOperating) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Operating);
        }
        if (hasActualRate) {
          size += pb::CodedOutputStream.ComputeFloatSize(2, ActualRate);
        }
        if (hasMaxHopperSize) {
          size += pb::CodedOutputStream.ComputeFloatSize(3, MaxHopperSize);
        }
        if (hasHarvesterDetails) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, HarvesterDetails);
        }
        if (hasFactoryDetails) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, FactoryDetails);
        }
        foreach (global::swgemurpcserver.rpc.CharacterInventoryItem element in HopperItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InstallationItemDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InstallationItemDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InstallationItemDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InstallationItemDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InstallationItemDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InstallationItemDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InstallationItemDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InstallationItemDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InstallationItemDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InstallationItemDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InstallationItemDetails MakeReadOnly() {
      hopperItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InstallationItemDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InstallationItemDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InstallationItemDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InstallationItemDetails result;
      
      private InstallationItemDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          InstallationItemDetails original = result;
          result = new InstallationItemDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InstallationItemDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.InstallationItemDetails.Descriptor; }
      }
      
      public override InstallationItemDetails DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.InstallationItemDetails.DefaultInstance; }
      }
      
      public override InstallationItemDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InstallationItemDetails) {
          return MergeFrom((InstallationItemDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InstallationItemDetails other) {
        if (other == global::swgemurpcserver.rpc.InstallationItemDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOperating) {
          Operating = other.Operating;
        }
        if (other.HasActualRate) {
          ActualRate = other.ActualRate;
        }
        if (other.HasMaxHopperSize) {
          MaxHopperSize = other.MaxHopperSize;
        }
        if (other.HasHarvesterDetails) {
          MergeHarvesterDetails(other.HarvesterDetails);
        }
        if (other.HasFactoryDetails) {
          MergeFactoryDetails(other.FactoryDetails);
        }
        if (other.hopperItems_.Count != 0) {
          result.hopperItems_.Add(other.hopperItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_installationItemDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _installationItemDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOperating = input.ReadBool(ref result.operating_);
              break;
            }
            case 21: {
              result.hasActualRate = input.ReadFloat(ref result.actualRate_);
              break;
            }
            case 29: {
              result.hasMaxHopperSize = input.ReadFloat(ref result.maxHopperSize_);
              break;
            }
            case 34: {
              global::swgemurpcserver.rpc.HarvesterItemDetails.Builder subBuilder = global::swgemurpcserver.rpc.HarvesterItemDetails.CreateBuilder();
              if (result.hasHarvesterDetails) {
                subBuilder.MergeFrom(HarvesterDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              HarvesterDetails = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::swgemurpcserver.rpc.FactoryItemDetails.Builder subBuilder = global::swgemurpcserver.rpc.FactoryItemDetails.CreateBuilder();
              if (result.hasFactoryDetails) {
                subBuilder.MergeFrom(FactoryDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FactoryDetails = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              input.ReadMessageArray(tag, field_name, result.hopperItems_, global::swgemurpcserver.rpc.CharacterInventoryItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOperating {
        get { return result.hasOperating; }
      }
      public bool Operating {
        get { return result.Operating; }
        set { SetOperating(value); }
      }
      public Builder SetOperating(bool value) {
        PrepareBuilder();
        result.hasOperating = true;
        result.operating_ = value;
        return this;
      }
      public Builder ClearOperating() {
        PrepareBuilder();
        result.hasOperating = false;
        result.operating_ = false;
        return this;
      }
      
      public bool HasActualRate {
        get { return result.hasActualRate; }
      }
      public float ActualRate {
        get { return result.ActualRate; }
        set { SetActualRate(value); }
      }
      public Builder SetActualRate(float value) {
        PrepareBuilder();
        result.hasActualRate = true;
        result.actualRate_ = value;
        return this;
      }
      public Builder ClearActualRate() {
        PrepareBuilder();
        result.hasActualRate = false;
        result.actualRate_ = 0F;
        return this;
      }
      
      public bool HasMaxHopperSize {
        get { return result.hasMaxHopperSize; }
      }
      public float MaxHopperSize {
        get { return result.MaxHopperSize; }
        set { SetMaxHopperSize(value); }
      }
      public Builder SetMaxHopperSize(float value) {
        PrepareBuilder();
        result.hasMaxHopperSize = true;
        result.maxHopperSize_ = value;
        return this;
      }
      public Builder ClearMaxHopperSize() {
        PrepareBuilder();
        result.hasMaxHopperSize = false;
        result.maxHopperSize_ = 0F;
        return this;
      }
      
      public bool HasHarvesterDetails {
       get { return result.hasHarvesterDetails; }
      }
      public global::swgemurpcserver.rpc.HarvesterItemDetails HarvesterDetails {
        get { return result.HarvesterDetails; }
        set { SetHarvesterDetails(value); }
      }
      public Builder SetHarvesterDetails(global::swgemurpcserver.rpc.HarvesterItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHarvesterDetails = true;
        result.harvesterDetails_ = value;
        return this;
      }
      public Builder SetHarvesterDetails(global::swgemurpcserver.rpc.HarvesterItemDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHarvesterDetails = true;
        result.harvesterDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHarvesterDetails(global::swgemurpcserver.rpc.HarvesterItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHarvesterDetails &&
            result.harvesterDetails_ != global::swgemurpcserver.rpc.HarvesterItemDetails.DefaultInstance) {
            result.harvesterDetails_ = global::swgemurpcserver.rpc.HarvesterItemDetails.CreateBuilder(result.harvesterDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.harvesterDetails_ = value;
        }
        result.hasHarvesterDetails = true;
        return this;
      }
      public Builder ClearHarvesterDetails() {
        PrepareBuilder();
        result.hasHarvesterDetails = false;
        result.harvesterDetails_ = null;
        return this;
      }
      
      public bool HasFactoryDetails {
       get { return result.hasFactoryDetails; }
      }
      public global::swgemurpcserver.rpc.FactoryItemDetails FactoryDetails {
        get { return result.FactoryDetails; }
        set { SetFactoryDetails(value); }
      }
      public Builder SetFactoryDetails(global::swgemurpcserver.rpc.FactoryItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFactoryDetails = true;
        result.factoryDetails_ = value;
        return this;
      }
      public Builder SetFactoryDetails(global::swgemurpcserver.rpc.FactoryItemDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFactoryDetails = true;
        result.factoryDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFactoryDetails(global::swgemurpcserver.rpc.FactoryItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFactoryDetails &&
            result.factoryDetails_ != global::swgemurpcserver.rpc.FactoryItemDetails.DefaultInstance) {
            result.factoryDetails_ = global::swgemurpcserver.rpc.FactoryItemDetails.CreateBuilder(result.factoryDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.factoryDetails_ = value;
        }
        result.hasFactoryDetails = true;
        return this;
      }
      public Builder ClearFactoryDetails() {
        PrepareBuilder();
        result.hasFactoryDetails = false;
        result.factoryDetails_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem> HopperItemsList {
        get { return PrepareBuilder().hopperItems_; }
      }
      public int HopperItemsCount {
        get { return result.HopperItemsCount; }
      }
      public global::swgemurpcserver.rpc.CharacterInventoryItem GetHopperItems(int index) {
        return result.GetHopperItems(index);
      }
      public Builder SetHopperItems(int index, global::swgemurpcserver.rpc.CharacterInventoryItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hopperItems_[index] = value;
        return this;
      }
      public Builder SetHopperItems(int index, global::swgemurpcserver.rpc.CharacterInventoryItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hopperItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHopperItems(global::swgemurpcserver.rpc.CharacterInventoryItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hopperItems_.Add(value);
        return this;
      }
      public Builder AddHopperItems(global::swgemurpcserver.rpc.CharacterInventoryItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hopperItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHopperItems(scg::IEnumerable<global::swgemurpcserver.rpc.CharacterInventoryItem> values) {
        PrepareBuilder();
        result.hopperItems_.Add(values);
        return this;
      }
      public Builder ClearHopperItems() {
        PrepareBuilder();
        result.hopperItems_.Clear();
        return this;
      }
    }
    static InstallationItemDetails() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.StructureDetails.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class HarvesterItemDetails : pb::GeneratedMessage<HarvesterItemDetails, HarvesterItemDetails.Builder> {
    private HarvesterItemDetails() { }
    private static readonly HarvesterItemDetails defaultInstance = new HarvesterItemDetails().MakeReadOnly();
    private static readonly string[] _harvesterItemDetailsFieldNames = new string[] { "extraction_rate" };
    private static readonly uint[] _harvesterItemDetailsFieldTags = new uint[] { 13 };
    public static HarvesterItemDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HarvesterItemDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HarvesterItemDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_HarvesterItemDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HarvesterItemDetails, HarvesterItemDetails.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_HarvesterItemDetails__FieldAccessorTable; }
    }
    
    public const int ExtractionRateFieldNumber = 1;
    private bool hasExtractionRate;
    private float extractionRate_;
    public bool HasExtractionRate {
      get { return hasExtractionRate; }
    }
    public float ExtractionRate {
      get { return extractionRate_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasExtractionRate) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _harvesterItemDetailsFieldNames;
      if (hasExtractionRate) {
        output.WriteFloat(1, field_names[0], ExtractionRate);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasExtractionRate) {
          size += pb::CodedOutputStream.ComputeFloatSize(1, ExtractionRate);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static HarvesterItemDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HarvesterItemDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HarvesterItemDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HarvesterItemDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HarvesterItemDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HarvesterItemDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HarvesterItemDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HarvesterItemDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HarvesterItemDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HarvesterItemDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HarvesterItemDetails MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HarvesterItemDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<HarvesterItemDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HarvesterItemDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HarvesterItemDetails result;
      
      private HarvesterItemDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          HarvesterItemDetails original = result;
          result = new HarvesterItemDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HarvesterItemDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.HarvesterItemDetails.Descriptor; }
      }
      
      public override HarvesterItemDetails DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.HarvesterItemDetails.DefaultInstance; }
      }
      
      public override HarvesterItemDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HarvesterItemDetails) {
          return MergeFrom((HarvesterItemDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HarvesterItemDetails other) {
        if (other == global::swgemurpcserver.rpc.HarvesterItemDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasExtractionRate) {
          ExtractionRate = other.ExtractionRate;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_harvesterItemDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _harvesterItemDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasExtractionRate = input.ReadFloat(ref result.extractionRate_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasExtractionRate {
        get { return result.hasExtractionRate; }
      }
      public float ExtractionRate {
        get { return result.ExtractionRate; }
        set { SetExtractionRate(value); }
      }
      public Builder SetExtractionRate(float value) {
        PrepareBuilder();
        result.hasExtractionRate = true;
        result.extractionRate_ = value;
        return this;
      }
      public Builder ClearExtractionRate() {
        PrepareBuilder();
        result.hasExtractionRate = false;
        result.extractionRate_ = 0F;
        return this;
      }
    }
    static HarvesterItemDetails() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.StructureDetails.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FactoryItemDetails : pb::GeneratedMessage<FactoryItemDetails, FactoryItemDetails.Builder> {
    private FactoryItemDetails() { }
    private static readonly FactoryItemDetails defaultInstance = new FactoryItemDetails().MakeReadOnly();
    private static readonly string[] _factoryItemDetailsFieldNames = new string[] { "ingredient_items", "schematic" };
    private static readonly uint[] _factoryItemDetailsFieldTags = new uint[] { 82, 10 };
    public static FactoryItemDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FactoryItemDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FactoryItemDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_FactoryItemDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FactoryItemDetails, FactoryItemDetails.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_FactoryItemDetails__FieldAccessorTable; }
    }
    
    public const int SchematicFieldNumber = 1;
    private bool hasSchematic;
    private global::swgemurpcserver.rpc.CharacterInventoryItem schematic_;
    public bool HasSchematic {
      get { return hasSchematic; }
    }
    public global::swgemurpcserver.rpc.CharacterInventoryItem Schematic {
      get { return schematic_ ?? global::swgemurpcserver.rpc.CharacterInventoryItem.DefaultInstance; }
    }
    
    public const int IngredientItemsFieldNumber = 10;
    private pbc::PopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem> ingredientItems_ = new pbc::PopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem>();
    public scg::IList<global::swgemurpcserver.rpc.CharacterInventoryItem> IngredientItemsList {
      get { return ingredientItems_; }
    }
    public int IngredientItemsCount {
      get { return ingredientItems_.Count; }
    }
    public global::swgemurpcserver.rpc.CharacterInventoryItem GetIngredientItems(int index) {
      return ingredientItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasSchematic) {
          if (!Schematic.IsInitialized) return false;
        }
        foreach (global::swgemurpcserver.rpc.CharacterInventoryItem element in IngredientItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _factoryItemDetailsFieldNames;
      if (hasSchematic) {
        output.WriteMessage(1, field_names[1], Schematic);
      }
      if (ingredientItems_.Count > 0) {
        output.WriteMessageArray(10, field_names[0], ingredientItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSchematic) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Schematic);
        }
        foreach (global::swgemurpcserver.rpc.CharacterInventoryItem element in IngredientItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FactoryItemDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FactoryItemDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FactoryItemDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FactoryItemDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FactoryItemDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FactoryItemDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FactoryItemDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FactoryItemDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FactoryItemDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FactoryItemDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FactoryItemDetails MakeReadOnly() {
      ingredientItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FactoryItemDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FactoryItemDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FactoryItemDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FactoryItemDetails result;
      
      private FactoryItemDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          FactoryItemDetails original = result;
          result = new FactoryItemDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FactoryItemDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.FactoryItemDetails.Descriptor; }
      }
      
      public override FactoryItemDetails DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.FactoryItemDetails.DefaultInstance; }
      }
      
      public override FactoryItemDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FactoryItemDetails) {
          return MergeFrom((FactoryItemDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FactoryItemDetails other) {
        if (other == global::swgemurpcserver.rpc.FactoryItemDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSchematic) {
          MergeSchematic(other.Schematic);
        }
        if (other.ingredientItems_.Count != 0) {
          result.ingredientItems_.Add(other.ingredientItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_factoryItemDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _factoryItemDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::swgemurpcserver.rpc.CharacterInventoryItem.Builder subBuilder = global::swgemurpcserver.rpc.CharacterInventoryItem.CreateBuilder();
              if (result.hasSchematic) {
                subBuilder.MergeFrom(Schematic);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Schematic = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              input.ReadMessageArray(tag, field_name, result.ingredientItems_, global::swgemurpcserver.rpc.CharacterInventoryItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSchematic {
       get { return result.hasSchematic; }
      }
      public global::swgemurpcserver.rpc.CharacterInventoryItem Schematic {
        get { return result.Schematic; }
        set { SetSchematic(value); }
      }
      public Builder SetSchematic(global::swgemurpcserver.rpc.CharacterInventoryItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSchematic = true;
        result.schematic_ = value;
        return this;
      }
      public Builder SetSchematic(global::swgemurpcserver.rpc.CharacterInventoryItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSchematic = true;
        result.schematic_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSchematic(global::swgemurpcserver.rpc.CharacterInventoryItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSchematic &&
            result.schematic_ != global::swgemurpcserver.rpc.CharacterInventoryItem.DefaultInstance) {
            result.schematic_ = global::swgemurpcserver.rpc.CharacterInventoryItem.CreateBuilder(result.schematic_).MergeFrom(value).BuildPartial();
        } else {
          result.schematic_ = value;
        }
        result.hasSchematic = true;
        return this;
      }
      public Builder ClearSchematic() {
        PrepareBuilder();
        result.hasSchematic = false;
        result.schematic_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::swgemurpcserver.rpc.CharacterInventoryItem> IngredientItemsList {
        get { return PrepareBuilder().ingredientItems_; }
      }
      public int IngredientItemsCount {
        get { return result.IngredientItemsCount; }
      }
      public global::swgemurpcserver.rpc.CharacterInventoryItem GetIngredientItems(int index) {
        return result.GetIngredientItems(index);
      }
      public Builder SetIngredientItems(int index, global::swgemurpcserver.rpc.CharacterInventoryItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ingredientItems_[index] = value;
        return this;
      }
      public Builder SetIngredientItems(int index, global::swgemurpcserver.rpc.CharacterInventoryItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ingredientItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIngredientItems(global::swgemurpcserver.rpc.CharacterInventoryItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ingredientItems_.Add(value);
        return this;
      }
      public Builder AddIngredientItems(global::swgemurpcserver.rpc.CharacterInventoryItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ingredientItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIngredientItems(scg::IEnumerable<global::swgemurpcserver.rpc.CharacterInventoryItem> values) {
        PrepareBuilder();
        result.ingredientItems_.Add(values);
        return this;
      }
      public Builder ClearIngredientItems() {
        PrepareBuilder();
        result.ingredientItems_.Clear();
        return this;
      }
    }
    static FactoryItemDetails() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.StructureDetails.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStructureItemDetailsRequest : pb::GeneratedMessage<GetStructureItemDetailsRequest, GetStructureItemDetailsRequest.Builder> {
    private GetStructureItemDetailsRequest() { }
    private static readonly GetStructureItemDetailsRequest defaultInstance = new GetStructureItemDetailsRequest().MakeReadOnly();
    private static readonly string[] _getStructureItemDetailsRequestFieldNames = new string[] { "object_id", "owner_object_id" };
    private static readonly uint[] _getStructureItemDetailsRequestFieldTags = new uint[] { 9, 17 };
    public static GetStructureItemDetailsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStructureItemDetailsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStructureItemDetailsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_GetStructureItemDetailsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStructureItemDetailsRequest, GetStructureItemDetailsRequest.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_GetStructureItemDetailsRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int OwnerObjectIdFieldNumber = 2;
    private bool hasOwnerObjectId;
    private ulong ownerObjectId_;
    public bool HasOwnerObjectId {
      get { return hasOwnerObjectId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong OwnerObjectId {
      get { return ownerObjectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStructureItemDetailsRequestFieldNames;
      if (hasObjectId) {
        output.WriteFixed64(1, field_names[0], ObjectId);
      }
      if (hasOwnerObjectId) {
        output.WriteFixed64(2, field_names[1], OwnerObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, ObjectId);
        }
        if (hasOwnerObjectId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(2, OwnerObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStructureItemDetailsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStructureItemDetailsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStructureItemDetailsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStructureItemDetailsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStructureItemDetailsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStructureItemDetailsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStructureItemDetailsRequest result;
      
      private GetStructureItemDetailsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStructureItemDetailsRequest original = result;
          result = new GetStructureItemDetailsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStructureItemDetailsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.GetStructureItemDetailsRequest.Descriptor; }
      }
      
      public override GetStructureItemDetailsRequest DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.GetStructureItemDetailsRequest.DefaultInstance; }
      }
      
      public override GetStructureItemDetailsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStructureItemDetailsRequest) {
          return MergeFrom((GetStructureItemDetailsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStructureItemDetailsRequest other) {
        if (other == global::swgemurpcserver.rpc.GetStructureItemDetailsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        if (other.HasOwnerObjectId) {
          OwnerObjectId = other.OwnerObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStructureItemDetailsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStructureItemDetailsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasObjectId = input.ReadFixed64(ref result.objectId_);
              break;
            }
            case 17: {
              result.hasOwnerObjectId = input.ReadFixed64(ref result.ownerObjectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0;
        return this;
      }
      
      public bool HasOwnerObjectId {
        get { return result.hasOwnerObjectId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong OwnerObjectId {
        get { return result.OwnerObjectId; }
        set { SetOwnerObjectId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOwnerObjectId(ulong value) {
        PrepareBuilder();
        result.hasOwnerObjectId = true;
        result.ownerObjectId_ = value;
        return this;
      }
      public Builder ClearOwnerObjectId() {
        PrepareBuilder();
        result.hasOwnerObjectId = false;
        result.ownerObjectId_ = 0;
        return this;
      }
    }
    static GetStructureItemDetailsRequest() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.StructureDetails.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetStructureItemDetailsResponse : pb::GeneratedMessage<GetStructureItemDetailsResponse, GetStructureItemDetailsResponse.Builder> {
    private GetStructureItemDetailsResponse() { }
    private static readonly GetStructureItemDetailsResponse defaultInstance = new GetStructureItemDetailsResponse().MakeReadOnly();
    private static readonly string[] _getStructureItemDetailsResponseFieldNames = new string[] { "structures" };
    private static readonly uint[] _getStructureItemDetailsResponseFieldTags = new uint[] { 10 };
    public static GetStructureItemDetailsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStructureItemDetailsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStructureItemDetailsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_GetStructureItemDetailsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStructureItemDetailsResponse, GetStructureItemDetailsResponse.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.StructureDetails.internal__static_swgemurpcserver_rpc_GetStructureItemDetailsResponse__FieldAccessorTable; }
    }
    
    public const int StructuresFieldNumber = 1;
    private pbc::PopsicleList<global::swgemurpcserver.rpc.SWGEmuStructureItemDetails> structures_ = new pbc::PopsicleList<global::swgemurpcserver.rpc.SWGEmuStructureItemDetails>();
    public scg::IList<global::swgemurpcserver.rpc.SWGEmuStructureItemDetails> StructuresList {
      get { return structures_; }
    }
    public int StructuresCount {
      get { return structures_.Count; }
    }
    public global::swgemurpcserver.rpc.SWGEmuStructureItemDetails GetStructures(int index) {
      return structures_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::swgemurpcserver.rpc.SWGEmuStructureItemDetails element in StructuresList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStructureItemDetailsResponseFieldNames;
      if (structures_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], structures_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::swgemurpcserver.rpc.SWGEmuStructureItemDetails element in StructuresList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStructureItemDetailsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStructureItemDetailsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStructureItemDetailsResponse MakeReadOnly() {
      structures_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStructureItemDetailsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStructureItemDetailsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStructureItemDetailsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStructureItemDetailsResponse result;
      
      private GetStructureItemDetailsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStructureItemDetailsResponse original = result;
          result = new GetStructureItemDetailsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStructureItemDetailsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.Descriptor; }
      }
      
      public override GetStructureItemDetailsResponse DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.DefaultInstance; }
      }
      
      public override GetStructureItemDetailsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStructureItemDetailsResponse) {
          return MergeFrom((GetStructureItemDetailsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStructureItemDetailsResponse other) {
        if (other == global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.structures_.Count != 0) {
          result.structures_.Add(other.structures_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStructureItemDetailsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStructureItemDetailsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.structures_, global::swgemurpcserver.rpc.SWGEmuStructureItemDetails.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::swgemurpcserver.rpc.SWGEmuStructureItemDetails> StructuresList {
        get { return PrepareBuilder().structures_; }
      }
      public int StructuresCount {
        get { return result.StructuresCount; }
      }
      public global::swgemurpcserver.rpc.SWGEmuStructureItemDetails GetStructures(int index) {
        return result.GetStructures(index);
      }
      public Builder SetStructures(int index, global::swgemurpcserver.rpc.SWGEmuStructureItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.structures_[index] = value;
        return this;
      }
      public Builder SetStructures(int index, global::swgemurpcserver.rpc.SWGEmuStructureItemDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.structures_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStructures(global::swgemurpcserver.rpc.SWGEmuStructureItemDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.structures_.Add(value);
        return this;
      }
      public Builder AddStructures(global::swgemurpcserver.rpc.SWGEmuStructureItemDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.structures_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStructures(scg::IEnumerable<global::swgemurpcserver.rpc.SWGEmuStructureItemDetails> values) {
        PrepareBuilder();
        result.structures_.Add(values);
        return this;
      }
      public Builder ClearStructures() {
        PrepareBuilder();
        result.structures_.Clear();
        return this;
      }
    }
    static GetStructureItemDetailsResponse() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.StructureDetails.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class SWGEmuStructureItemDetailsService : pb::IService {
    public abstract void GetStructureItemDetails(
        pb::IRpcController controller,
        global::swgemurpcserver.rpc.GetStructureItemDetailsRequest request,
        global::System.Action<global::swgemurpcserver.rpc.GetStructureItemDetailsResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return StructureDetails.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.GetStructureItemDetails(controller, (global::swgemurpcserver.rpc.GetStructureItemDetailsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::swgemurpcserver.rpc.GetStructureItemDetailsResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::swgemurpcserver.rpc.GetStructureItemDetailsRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::swgemurpcserver.rpc.SWGEmuStructureItemDetailsService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void GetStructureItemDetails(
          pb::IRpcController controller,
          global::swgemurpcserver.rpc.GetStructureItemDetailsRequest request,
          global::System.Action<global::swgemurpcserver.rpc.GetStructureItemDetailsResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::swgemurpcserver.rpc.GetStructureItemDetailsResponse, global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.Builder>(done, global::swgemurpcserver.rpc.GetStructureItemDetailsResponse.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
