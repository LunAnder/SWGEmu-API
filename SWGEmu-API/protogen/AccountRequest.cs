// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace swgemurpcserver.rpc {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class AccountRequest {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_GetAccountRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.GetAccountRequest, global::swgemurpcserver.rpc.GetAccountRequest.Builder> internal__static_swgemurpcserver_rpc_GetAccountRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_SWGEmuAccountCharacter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.SWGEmuAccountCharacter, global::swgemurpcserver.rpc.SWGEmuAccountCharacter.Builder> internal__static_swgemurpcserver_rpc_SWGEmuAccountCharacter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_SWGEmuAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.SWGEmuAccount, global::swgemurpcserver.rpc.SWGEmuAccount.Builder> internal__static_swgemurpcserver_rpc_SWGEmuAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_swgemurpcserver_rpc_GetAccountResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.GetAccountResponse, global::swgemurpcserver.rpc.GetAccountResponse.Builder> internal__static_swgemurpcserver_rpc_GetAccountResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static AccountRequest() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChRBY2NvdW50UmVxdWVzdC5wcm90bxITc3dnZW11cnBjc2VydmVyLnJwYyLC" + 
          "AQoRR2V0QWNjb3VudFJlcXVlc3QSRgoLc2VhcmNoX3R5cGUYASACKA4yMS5z" + 
          "d2dlbXVycGNzZXJ2ZXIucnBjLkdldEFjY291bnRSZXF1ZXN0LlNlYXJjaFR5" + 
          "cGUSEQoJdXNlcl9uYW1lGAIgASgJEhAKCHBhc3N3b3JkGAMgASgJEhIKCmFj" + 
          "Y291bnRfaWQYBCABKAciLAoKU2VhcmNoVHlwZRINCglBQ0NPVU5USUQQABIP" + 
          "CgtBQ0NPVU5UTkFNRRABIpYCChZTV0dFbXVBY2NvdW50Q2hhcmFjdGVyEhEK" + 
          "CW9iamVjdF9pZBgBIAIoBhISCgphY2NvdW50X2lkGAIgAigHEhEKCWdhbGF4" + 
          "eV9pZBgDIAIoBxITCgtjcmVhdGVfdGltZRgEIAIoBhIOCgZnZW5kZXIYBSAC" + 
          "KAcSDAoEcmFjZRgGIAIoBxISCgpmaXJzdF9uYW1lGAcgAigJEhAKCHN1cl9u" + 
          "YW1lGAggAigJEhMKC2dhbGF4eV9uYW1lGAkgAigJEhUKBmJhbm5lZBgKIAEo" + 
          "CDoFZmFsc2USFgoOYmFuX2V4cGlyYXRpb24YCyABKAcSEgoKYmFuX3JlYXNv" + 
          "bhgMIAEoCRIRCglpbnZlbnRvcnkYDSABKAkisgEKDVNXR0VtdUFjY291bnQS" + 
          "EgoKYWNjb3VudF9pZBgBIAIoBxIRCgl1c2VyX25hbWUYAiACKAkSDgoGYWN0" + 
          "aXZlGAMgAigIEhQKDGNyZWF0ZWRfdGltZRgEIAIoBxITCgthZG1pbl9sZXZl" + 
          "bBgFIAEoBxI/CgpjaGFyYWN0ZXJzGAogAygLMisuc3dnZW11cnBjc2VydmVy" + 
          "LnJwYy5TV0dFbXVBY2NvdW50Q2hhcmFjdGVyImIKEkdldEFjY291bnRSZXNw" + 
          "b25zZRI0CghhY2NvdW50cxgBIAMoCzIiLnN3Z2VtdXJwY3NlcnZlci5ycGMu" + 
          "U1dHRW11QWNjb3VudBIWCg52YWxpZF9wYXNzd29yZBgCIAEoCDJ1ChRTV0dF" + 
          "bXVBY2NvdW50U2VydmljZRJdCgpHZXRBY2NvdW50EiYuc3dnZW11cnBjc2Vy" + 
          "dmVyLnJwYy5HZXRBY2NvdW50UmVxdWVzdBonLnN3Z2VtdXJwY3NlcnZlci5y" + 
          "cGMuR2V0QWNjb3VudFJlc3BvbnNlQgOAAQE=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_swgemurpcserver_rpc_GetAccountRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_swgemurpcserver_rpc_GetAccountRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.GetAccountRequest, global::swgemurpcserver.rpc.GetAccountRequest.Builder>(internal__static_swgemurpcserver_rpc_GetAccountRequest__Descriptor,
                new string[] { "SearchType", "UserName", "Password", "AccountId", });
        internal__static_swgemurpcserver_rpc_SWGEmuAccountCharacter__Descriptor = Descriptor.MessageTypes[1];
        internal__static_swgemurpcserver_rpc_SWGEmuAccountCharacter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.SWGEmuAccountCharacter, global::swgemurpcserver.rpc.SWGEmuAccountCharacter.Builder>(internal__static_swgemurpcserver_rpc_SWGEmuAccountCharacter__Descriptor,
                new string[] { "ObjectId", "AccountId", "GalaxyId", "CreateTime", "Gender", "Race", "FirstName", "SurName", "GalaxyName", "Banned", "BanExpiration", "BanReason", "Inventory", });
        internal__static_swgemurpcserver_rpc_SWGEmuAccount__Descriptor = Descriptor.MessageTypes[2];
        internal__static_swgemurpcserver_rpc_SWGEmuAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.SWGEmuAccount, global::swgemurpcserver.rpc.SWGEmuAccount.Builder>(internal__static_swgemurpcserver_rpc_SWGEmuAccount__Descriptor,
                new string[] { "AccountId", "UserName", "Active", "CreatedTime", "AdminLevel", "Characters", });
        internal__static_swgemurpcserver_rpc_GetAccountResponse__Descriptor = Descriptor.MessageTypes[3];
        internal__static_swgemurpcserver_rpc_GetAccountResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::swgemurpcserver.rpc.GetAccountResponse, global::swgemurpcserver.rpc.GetAccountResponse.Builder>(internal__static_swgemurpcserver_rpc_GetAccountResponse__Descriptor,
                new string[] { "Accounts", "ValidPassword", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetAccountRequest : pb::GeneratedMessage<GetAccountRequest, GetAccountRequest.Builder> {
    private GetAccountRequest() { }
    private static readonly GetAccountRequest defaultInstance = new GetAccountRequest().MakeReadOnly();
    private static readonly string[] _getAccountRequestFieldNames = new string[] { "account_id", "password", "search_type", "user_name" };
    private static readonly uint[] _getAccountRequestFieldTags = new uint[] { 37, 26, 8, 18 };
    public static GetAccountRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAccountRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAccountRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.AccountRequest.internal__static_swgemurpcserver_rpc_GetAccountRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAccountRequest, GetAccountRequest.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.AccountRequest.internal__static_swgemurpcserver_rpc_GetAccountRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum SearchType {
        ACCOUNTID = 0,
        ACCOUNTNAME = 1,
      }
      
    }
    #endregion
    
    public const int SearchTypeFieldNumber = 1;
    private bool hasSearchType;
    private global::swgemurpcserver.rpc.GetAccountRequest.Types.SearchType searchType_ = global::swgemurpcserver.rpc.GetAccountRequest.Types.SearchType.ACCOUNTID;
    public bool HasSearchType {
      get { return hasSearchType; }
    }
    public global::swgemurpcserver.rpc.GetAccountRequest.Types.SearchType SearchType {
      get { return searchType_; }
    }
    
    public const int UserNameFieldNumber = 2;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int PasswordFieldNumber = 3;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int AccountIdFieldNumber = 4;
    private bool hasAccountId;
    private uint accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSearchType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAccountRequestFieldNames;
      if (hasSearchType) {
        output.WriteEnum(1, field_names[2], (int) SearchType, SearchType);
      }
      if (hasUserName) {
        output.WriteString(2, field_names[3], UserName);
      }
      if (hasPassword) {
        output.WriteString(3, field_names[1], Password);
      }
      if (hasAccountId) {
        output.WriteFixed32(4, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSearchType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) SearchType);
        }
        if (hasUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, UserName);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Password);
        }
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeFixed32Size(4, AccountId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAccountRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAccountRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAccountRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAccountRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAccountRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAccountRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAccountRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAccountRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAccountRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAccountRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAccountRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAccountRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAccountRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAccountRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAccountRequest result;
      
      private GetAccountRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAccountRequest original = result;
          result = new GetAccountRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAccountRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.GetAccountRequest.Descriptor; }
      }
      
      public override GetAccountRequest DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.GetAccountRequest.DefaultInstance; }
      }
      
      public override GetAccountRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAccountRequest) {
          return MergeFrom((GetAccountRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAccountRequest other) {
        if (other == global::swgemurpcserver.rpc.GetAccountRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSearchType) {
          SearchType = other.SearchType;
        }
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAccountRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAccountRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.searchType_, out unknown)) {
                result.hasSearchType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 26: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 37: {
              result.hasAccountId = input.ReadFixed32(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSearchType {
       get { return result.hasSearchType; }
      }
      public global::swgemurpcserver.rpc.GetAccountRequest.Types.SearchType SearchType {
        get { return result.SearchType; }
        set { SetSearchType(value); }
      }
      public Builder SetSearchType(global::swgemurpcserver.rpc.GetAccountRequest.Types.SearchType value) {
        PrepareBuilder();
        result.hasSearchType = true;
        result.searchType_ = value;
        return this;
      }
      public Builder ClearSearchType() {
        PrepareBuilder();
        result.hasSearchType = false;
        result.searchType_ = global::swgemurpcserver.rpc.GetAccountRequest.Types.SearchType.ACCOUNTID;
        return this;
      }
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      [global::System.CLSCompliant(false)]
      public uint AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAccountId(uint value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
    }
    static GetAccountRequest() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.AccountRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SWGEmuAccountCharacter : pb::GeneratedMessage<SWGEmuAccountCharacter, SWGEmuAccountCharacter.Builder> {
    private SWGEmuAccountCharacter() { }
    private static readonly SWGEmuAccountCharacter defaultInstance = new SWGEmuAccountCharacter().MakeReadOnly();
    private static readonly string[] _sWGEmuAccountCharacterFieldNames = new string[] { "account_id", "ban_expiration", "ban_reason", "banned", "create_time", "first_name", "galaxy_id", "galaxy_name", "gender", "inventory", "object_id", "race", "sur_name" };
    private static readonly uint[] _sWGEmuAccountCharacterFieldTags = new uint[] { 21, 93, 98, 80, 33, 58, 29, 74, 45, 106, 9, 53, 66 };
    public static SWGEmuAccountCharacter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SWGEmuAccountCharacter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SWGEmuAccountCharacter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.AccountRequest.internal__static_swgemurpcserver_rpc_SWGEmuAccountCharacter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SWGEmuAccountCharacter, SWGEmuAccountCharacter.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.AccountRequest.internal__static_swgemurpcserver_rpc_SWGEmuAccountCharacter__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int AccountIdFieldNumber = 2;
    private bool hasAccountId;
    private uint accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return accountId_; }
    }
    
    public const int GalaxyIdFieldNumber = 3;
    private bool hasGalaxyId;
    private uint galaxyId_;
    public bool HasGalaxyId {
      get { return hasGalaxyId; }
    }
    [global::System.CLSCompliant(false)]
    public uint GalaxyId {
      get { return galaxyId_; }
    }
    
    public const int CreateTimeFieldNumber = 4;
    private bool hasCreateTime;
    private ulong createTime_;
    public bool HasCreateTime {
      get { return hasCreateTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CreateTime {
      get { return createTime_; }
    }
    
    public const int GenderFieldNumber = 5;
    private bool hasGender;
    private uint gender_;
    public bool HasGender {
      get { return hasGender; }
    }
    [global::System.CLSCompliant(false)]
    public uint Gender {
      get { return gender_; }
    }
    
    public const int RaceFieldNumber = 6;
    private bool hasRace;
    private uint race_;
    public bool HasRace {
      get { return hasRace; }
    }
    [global::System.CLSCompliant(false)]
    public uint Race {
      get { return race_; }
    }
    
    public const int FirstNameFieldNumber = 7;
    private bool hasFirstName;
    private string firstName_ = "";
    public bool HasFirstName {
      get { return hasFirstName; }
    }
    public string FirstName {
      get { return firstName_; }
    }
    
    public const int SurNameFieldNumber = 8;
    private bool hasSurName;
    private string surName_ = "";
    public bool HasSurName {
      get { return hasSurName; }
    }
    public string SurName {
      get { return surName_; }
    }
    
    public const int GalaxyNameFieldNumber = 9;
    private bool hasGalaxyName;
    private string galaxyName_ = "";
    public bool HasGalaxyName {
      get { return hasGalaxyName; }
    }
    public string GalaxyName {
      get { return galaxyName_; }
    }
    
    public const int BannedFieldNumber = 10;
    private bool hasBanned;
    private bool banned_;
    public bool HasBanned {
      get { return hasBanned; }
    }
    public bool Banned {
      get { return banned_; }
    }
    
    public const int BanExpirationFieldNumber = 11;
    private bool hasBanExpiration;
    private uint banExpiration_;
    public bool HasBanExpiration {
      get { return hasBanExpiration; }
    }
    [global::System.CLSCompliant(false)]
    public uint BanExpiration {
      get { return banExpiration_; }
    }
    
    public const int BanReasonFieldNumber = 12;
    private bool hasBanReason;
    private string banReason_ = "";
    public bool HasBanReason {
      get { return hasBanReason; }
    }
    public string BanReason {
      get { return banReason_; }
    }
    
    public const int InventoryFieldNumber = 13;
    private bool hasInventory;
    private string inventory_ = "";
    public bool HasInventory {
      get { return hasInventory; }
    }
    public string Inventory {
      get { return inventory_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        if (!hasAccountId) return false;
        if (!hasGalaxyId) return false;
        if (!hasCreateTime) return false;
        if (!hasGender) return false;
        if (!hasRace) return false;
        if (!hasFirstName) return false;
        if (!hasSurName) return false;
        if (!hasGalaxyName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sWGEmuAccountCharacterFieldNames;
      if (hasObjectId) {
        output.WriteFixed64(1, field_names[10], ObjectId);
      }
      if (hasAccountId) {
        output.WriteFixed32(2, field_names[0], AccountId);
      }
      if (hasGalaxyId) {
        output.WriteFixed32(3, field_names[6], GalaxyId);
      }
      if (hasCreateTime) {
        output.WriteFixed64(4, field_names[4], CreateTime);
      }
      if (hasGender) {
        output.WriteFixed32(5, field_names[8], Gender);
      }
      if (hasRace) {
        output.WriteFixed32(6, field_names[11], Race);
      }
      if (hasFirstName) {
        output.WriteString(7, field_names[5], FirstName);
      }
      if (hasSurName) {
        output.WriteString(8, field_names[12], SurName);
      }
      if (hasGalaxyName) {
        output.WriteString(9, field_names[7], GalaxyName);
      }
      if (hasBanned) {
        output.WriteBool(10, field_names[3], Banned);
      }
      if (hasBanExpiration) {
        output.WriteFixed32(11, field_names[1], BanExpiration);
      }
      if (hasBanReason) {
        output.WriteString(12, field_names[2], BanReason);
      }
      if (hasInventory) {
        output.WriteString(13, field_names[9], Inventory);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, ObjectId);
        }
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeFixed32Size(2, AccountId);
        }
        if (hasGalaxyId) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, GalaxyId);
        }
        if (hasCreateTime) {
          size += pb::CodedOutputStream.ComputeFixed64Size(4, CreateTime);
        }
        if (hasGender) {
          size += pb::CodedOutputStream.ComputeFixed32Size(5, Gender);
        }
        if (hasRace) {
          size += pb::CodedOutputStream.ComputeFixed32Size(6, Race);
        }
        if (hasFirstName) {
          size += pb::CodedOutputStream.ComputeStringSize(7, FirstName);
        }
        if (hasSurName) {
          size += pb::CodedOutputStream.ComputeStringSize(8, SurName);
        }
        if (hasGalaxyName) {
          size += pb::CodedOutputStream.ComputeStringSize(9, GalaxyName);
        }
        if (hasBanned) {
          size += pb::CodedOutputStream.ComputeBoolSize(10, Banned);
        }
        if (hasBanExpiration) {
          size += pb::CodedOutputStream.ComputeFixed32Size(11, BanExpiration);
        }
        if (hasBanReason) {
          size += pb::CodedOutputStream.ComputeStringSize(12, BanReason);
        }
        if (hasInventory) {
          size += pb::CodedOutputStream.ComputeStringSize(13, Inventory);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SWGEmuAccountCharacter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SWGEmuAccountCharacter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SWGEmuAccountCharacter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SWGEmuAccountCharacter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SWGEmuAccountCharacter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SWGEmuAccountCharacter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SWGEmuAccountCharacter result;
      
      private SWGEmuAccountCharacter PrepareBuilder() {
        if (resultIsReadOnly) {
          SWGEmuAccountCharacter original = result;
          result = new SWGEmuAccountCharacter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SWGEmuAccountCharacter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.SWGEmuAccountCharacter.Descriptor; }
      }
      
      public override SWGEmuAccountCharacter DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.SWGEmuAccountCharacter.DefaultInstance; }
      }
      
      public override SWGEmuAccountCharacter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SWGEmuAccountCharacter) {
          return MergeFrom((SWGEmuAccountCharacter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SWGEmuAccountCharacter other) {
        if (other == global::swgemurpcserver.rpc.SWGEmuAccountCharacter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasGalaxyId) {
          GalaxyId = other.GalaxyId;
        }
        if (other.HasCreateTime) {
          CreateTime = other.CreateTime;
        }
        if (other.HasGender) {
          Gender = other.Gender;
        }
        if (other.HasRace) {
          Race = other.Race;
        }
        if (other.HasFirstName) {
          FirstName = other.FirstName;
        }
        if (other.HasSurName) {
          SurName = other.SurName;
        }
        if (other.HasGalaxyName) {
          GalaxyName = other.GalaxyName;
        }
        if (other.HasBanned) {
          Banned = other.Banned;
        }
        if (other.HasBanExpiration) {
          BanExpiration = other.BanExpiration;
        }
        if (other.HasBanReason) {
          BanReason = other.BanReason;
        }
        if (other.HasInventory) {
          Inventory = other.Inventory;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sWGEmuAccountCharacterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sWGEmuAccountCharacterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasObjectId = input.ReadFixed64(ref result.objectId_);
              break;
            }
            case 21: {
              result.hasAccountId = input.ReadFixed32(ref result.accountId_);
              break;
            }
            case 29: {
              result.hasGalaxyId = input.ReadFixed32(ref result.galaxyId_);
              break;
            }
            case 33: {
              result.hasCreateTime = input.ReadFixed64(ref result.createTime_);
              break;
            }
            case 45: {
              result.hasGender = input.ReadFixed32(ref result.gender_);
              break;
            }
            case 53: {
              result.hasRace = input.ReadFixed32(ref result.race_);
              break;
            }
            case 58: {
              result.hasFirstName = input.ReadString(ref result.firstName_);
              break;
            }
            case 66: {
              result.hasSurName = input.ReadString(ref result.surName_);
              break;
            }
            case 74: {
              result.hasGalaxyName = input.ReadString(ref result.galaxyName_);
              break;
            }
            case 80: {
              result.hasBanned = input.ReadBool(ref result.banned_);
              break;
            }
            case 93: {
              result.hasBanExpiration = input.ReadFixed32(ref result.banExpiration_);
              break;
            }
            case 98: {
              result.hasBanReason = input.ReadString(ref result.banReason_);
              break;
            }
            case 106: {
              result.hasInventory = input.ReadString(ref result.inventory_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0;
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      [global::System.CLSCompliant(false)]
      public uint AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAccountId(uint value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasGalaxyId {
        get { return result.hasGalaxyId; }
      }
      [global::System.CLSCompliant(false)]
      public uint GalaxyId {
        get { return result.GalaxyId; }
        set { SetGalaxyId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetGalaxyId(uint value) {
        PrepareBuilder();
        result.hasGalaxyId = true;
        result.galaxyId_ = value;
        return this;
      }
      public Builder ClearGalaxyId() {
        PrepareBuilder();
        result.hasGalaxyId = false;
        result.galaxyId_ = 0;
        return this;
      }
      
      public bool HasCreateTime {
        get { return result.hasCreateTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong CreateTime {
        get { return result.CreateTime; }
        set { SetCreateTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCreateTime(ulong value) {
        PrepareBuilder();
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder ClearCreateTime() {
        PrepareBuilder();
        result.hasCreateTime = false;
        result.createTime_ = 0;
        return this;
      }
      
      public bool HasGender {
        get { return result.hasGender; }
      }
      [global::System.CLSCompliant(false)]
      public uint Gender {
        get { return result.Gender; }
        set { SetGender(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetGender(uint value) {
        PrepareBuilder();
        result.hasGender = true;
        result.gender_ = value;
        return this;
      }
      public Builder ClearGender() {
        PrepareBuilder();
        result.hasGender = false;
        result.gender_ = 0;
        return this;
      }
      
      public bool HasRace {
        get { return result.hasRace; }
      }
      [global::System.CLSCompliant(false)]
      public uint Race {
        get { return result.Race; }
        set { SetRace(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRace(uint value) {
        PrepareBuilder();
        result.hasRace = true;
        result.race_ = value;
        return this;
      }
      public Builder ClearRace() {
        PrepareBuilder();
        result.hasRace = false;
        result.race_ = 0;
        return this;
      }
      
      public bool HasFirstName {
        get { return result.hasFirstName; }
      }
      public string FirstName {
        get { return result.FirstName; }
        set { SetFirstName(value); }
      }
      public Builder SetFirstName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFirstName = true;
        result.firstName_ = value;
        return this;
      }
      public Builder ClearFirstName() {
        PrepareBuilder();
        result.hasFirstName = false;
        result.firstName_ = "";
        return this;
      }
      
      public bool HasSurName {
        get { return result.hasSurName; }
      }
      public string SurName {
        get { return result.SurName; }
        set { SetSurName(value); }
      }
      public Builder SetSurName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSurName = true;
        result.surName_ = value;
        return this;
      }
      public Builder ClearSurName() {
        PrepareBuilder();
        result.hasSurName = false;
        result.surName_ = "";
        return this;
      }
      
      public bool HasGalaxyName {
        get { return result.hasGalaxyName; }
      }
      public string GalaxyName {
        get { return result.GalaxyName; }
        set { SetGalaxyName(value); }
      }
      public Builder SetGalaxyName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGalaxyName = true;
        result.galaxyName_ = value;
        return this;
      }
      public Builder ClearGalaxyName() {
        PrepareBuilder();
        result.hasGalaxyName = false;
        result.galaxyName_ = "";
        return this;
      }
      
      public bool HasBanned {
        get { return result.hasBanned; }
      }
      public bool Banned {
        get { return result.Banned; }
        set { SetBanned(value); }
      }
      public Builder SetBanned(bool value) {
        PrepareBuilder();
        result.hasBanned = true;
        result.banned_ = value;
        return this;
      }
      public Builder ClearBanned() {
        PrepareBuilder();
        result.hasBanned = false;
        result.banned_ = false;
        return this;
      }
      
      public bool HasBanExpiration {
        get { return result.hasBanExpiration; }
      }
      [global::System.CLSCompliant(false)]
      public uint BanExpiration {
        get { return result.BanExpiration; }
        set { SetBanExpiration(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBanExpiration(uint value) {
        PrepareBuilder();
        result.hasBanExpiration = true;
        result.banExpiration_ = value;
        return this;
      }
      public Builder ClearBanExpiration() {
        PrepareBuilder();
        result.hasBanExpiration = false;
        result.banExpiration_ = 0;
        return this;
      }
      
      public bool HasBanReason {
        get { return result.hasBanReason; }
      }
      public string BanReason {
        get { return result.BanReason; }
        set { SetBanReason(value); }
      }
      public Builder SetBanReason(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBanReason = true;
        result.banReason_ = value;
        return this;
      }
      public Builder ClearBanReason() {
        PrepareBuilder();
        result.hasBanReason = false;
        result.banReason_ = "";
        return this;
      }
      
      public bool HasInventory {
        get { return result.hasInventory; }
      }
      public string Inventory {
        get { return result.Inventory; }
        set { SetInventory(value); }
      }
      public Builder SetInventory(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInventory = true;
        result.inventory_ = value;
        return this;
      }
      public Builder ClearInventory() {
        PrepareBuilder();
        result.hasInventory = false;
        result.inventory_ = "";
        return this;
      }
    }
    static SWGEmuAccountCharacter() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.AccountRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SWGEmuAccount : pb::GeneratedMessage<SWGEmuAccount, SWGEmuAccount.Builder> {
    private SWGEmuAccount() { }
    private static readonly SWGEmuAccount defaultInstance = new SWGEmuAccount().MakeReadOnly();
    private static readonly string[] _sWGEmuAccountFieldNames = new string[] { "account_id", "active", "admin_level", "characters", "created_time", "user_name" };
    private static readonly uint[] _sWGEmuAccountFieldTags = new uint[] { 13, 24, 45, 82, 37, 18 };
    public static SWGEmuAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SWGEmuAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SWGEmuAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.AccountRequest.internal__static_swgemurpcserver_rpc_SWGEmuAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SWGEmuAccount, SWGEmuAccount.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.AccountRequest.internal__static_swgemurpcserver_rpc_SWGEmuAccount__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private uint accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return accountId_; }
    }
    
    public const int UserNameFieldNumber = 2;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int ActiveFieldNumber = 3;
    private bool hasActive;
    private bool active_;
    public bool HasActive {
      get { return hasActive; }
    }
    public bool Active {
      get { return active_; }
    }
    
    public const int CreatedTimeFieldNumber = 4;
    private bool hasCreatedTime;
    private uint createdTime_;
    public bool HasCreatedTime {
      get { return hasCreatedTime; }
    }
    [global::System.CLSCompliant(false)]
    public uint CreatedTime {
      get { return createdTime_; }
    }
    
    public const int AdminLevelFieldNumber = 5;
    private bool hasAdminLevel;
    private uint adminLevel_;
    public bool HasAdminLevel {
      get { return hasAdminLevel; }
    }
    [global::System.CLSCompliant(false)]
    public uint AdminLevel {
      get { return adminLevel_; }
    }
    
    public const int CharactersFieldNumber = 10;
    private pbc::PopsicleList<global::swgemurpcserver.rpc.SWGEmuAccountCharacter> characters_ = new pbc::PopsicleList<global::swgemurpcserver.rpc.SWGEmuAccountCharacter>();
    public scg::IList<global::swgemurpcserver.rpc.SWGEmuAccountCharacter> CharactersList {
      get { return characters_; }
    }
    public int CharactersCount {
      get { return characters_.Count; }
    }
    public global::swgemurpcserver.rpc.SWGEmuAccountCharacter GetCharacters(int index) {
      return characters_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        if (!hasUserName) return false;
        if (!hasActive) return false;
        if (!hasCreatedTime) return false;
        foreach (global::swgemurpcserver.rpc.SWGEmuAccountCharacter element in CharactersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sWGEmuAccountFieldNames;
      if (hasAccountId) {
        output.WriteFixed32(1, field_names[0], AccountId);
      }
      if (hasUserName) {
        output.WriteString(2, field_names[5], UserName);
      }
      if (hasActive) {
        output.WriteBool(3, field_names[1], Active);
      }
      if (hasCreatedTime) {
        output.WriteFixed32(4, field_names[4], CreatedTime);
      }
      if (hasAdminLevel) {
        output.WriteFixed32(5, field_names[2], AdminLevel);
      }
      if (characters_.Count > 0) {
        output.WriteMessageArray(10, field_names[3], characters_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccountId) {
          size += pb::CodedOutputStream.ComputeFixed32Size(1, AccountId);
        }
        if (hasUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, UserName);
        }
        if (hasActive) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, Active);
        }
        if (hasCreatedTime) {
          size += pb::CodedOutputStream.ComputeFixed32Size(4, CreatedTime);
        }
        if (hasAdminLevel) {
          size += pb::CodedOutputStream.ComputeFixed32Size(5, AdminLevel);
        }
        foreach (global::swgemurpcserver.rpc.SWGEmuAccountCharacter element in CharactersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SWGEmuAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SWGEmuAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SWGEmuAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SWGEmuAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SWGEmuAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SWGEmuAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SWGEmuAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SWGEmuAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SWGEmuAccount MakeReadOnly() {
      characters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SWGEmuAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SWGEmuAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SWGEmuAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SWGEmuAccount result;
      
      private SWGEmuAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          SWGEmuAccount original = result;
          result = new SWGEmuAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SWGEmuAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.SWGEmuAccount.Descriptor; }
      }
      
      public override SWGEmuAccount DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.SWGEmuAccount.DefaultInstance; }
      }
      
      public override SWGEmuAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SWGEmuAccount) {
          return MergeFrom((SWGEmuAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SWGEmuAccount other) {
        if (other == global::swgemurpcserver.rpc.SWGEmuAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasActive) {
          Active = other.Active;
        }
        if (other.HasCreatedTime) {
          CreatedTime = other.CreatedTime;
        }
        if (other.HasAdminLevel) {
          AdminLevel = other.AdminLevel;
        }
        if (other.characters_.Count != 0) {
          result.characters_.Add(other.characters_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sWGEmuAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sWGEmuAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasAccountId = input.ReadFixed32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 24: {
              result.hasActive = input.ReadBool(ref result.active_);
              break;
            }
            case 37: {
              result.hasCreatedTime = input.ReadFixed32(ref result.createdTime_);
              break;
            }
            case 45: {
              result.hasAdminLevel = input.ReadFixed32(ref result.adminLevel_);
              break;
            }
            case 82: {
              input.ReadMessageArray(tag, field_name, result.characters_, global::swgemurpcserver.rpc.SWGEmuAccountCharacter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      [global::System.CLSCompliant(false)]
      public uint AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAccountId(uint value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasActive {
        get { return result.hasActive; }
      }
      public bool Active {
        get { return result.Active; }
        set { SetActive(value); }
      }
      public Builder SetActive(bool value) {
        PrepareBuilder();
        result.hasActive = true;
        result.active_ = value;
        return this;
      }
      public Builder ClearActive() {
        PrepareBuilder();
        result.hasActive = false;
        result.active_ = false;
        return this;
      }
      
      public bool HasCreatedTime {
        get { return result.hasCreatedTime; }
      }
      [global::System.CLSCompliant(false)]
      public uint CreatedTime {
        get { return result.CreatedTime; }
        set { SetCreatedTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCreatedTime(uint value) {
        PrepareBuilder();
        result.hasCreatedTime = true;
        result.createdTime_ = value;
        return this;
      }
      public Builder ClearCreatedTime() {
        PrepareBuilder();
        result.hasCreatedTime = false;
        result.createdTime_ = 0;
        return this;
      }
      
      public bool HasAdminLevel {
        get { return result.hasAdminLevel; }
      }
      [global::System.CLSCompliant(false)]
      public uint AdminLevel {
        get { return result.AdminLevel; }
        set { SetAdminLevel(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAdminLevel(uint value) {
        PrepareBuilder();
        result.hasAdminLevel = true;
        result.adminLevel_ = value;
        return this;
      }
      public Builder ClearAdminLevel() {
        PrepareBuilder();
        result.hasAdminLevel = false;
        result.adminLevel_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::swgemurpcserver.rpc.SWGEmuAccountCharacter> CharactersList {
        get { return PrepareBuilder().characters_; }
      }
      public int CharactersCount {
        get { return result.CharactersCount; }
      }
      public global::swgemurpcserver.rpc.SWGEmuAccountCharacter GetCharacters(int index) {
        return result.GetCharacters(index);
      }
      public Builder SetCharacters(int index, global::swgemurpcserver.rpc.SWGEmuAccountCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.characters_[index] = value;
        return this;
      }
      public Builder SetCharacters(int index, global::swgemurpcserver.rpc.SWGEmuAccountCharacter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.characters_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCharacters(global::swgemurpcserver.rpc.SWGEmuAccountCharacter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.characters_.Add(value);
        return this;
      }
      public Builder AddCharacters(global::swgemurpcserver.rpc.SWGEmuAccountCharacter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.characters_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCharacters(scg::IEnumerable<global::swgemurpcserver.rpc.SWGEmuAccountCharacter> values) {
        PrepareBuilder();
        result.characters_.Add(values);
        return this;
      }
      public Builder ClearCharacters() {
        PrepareBuilder();
        result.characters_.Clear();
        return this;
      }
    }
    static SWGEmuAccount() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.AccountRequest.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetAccountResponse : pb::GeneratedMessage<GetAccountResponse, GetAccountResponse.Builder> {
    private GetAccountResponse() { }
    private static readonly GetAccountResponse defaultInstance = new GetAccountResponse().MakeReadOnly();
    private static readonly string[] _getAccountResponseFieldNames = new string[] { "accounts", "valid_password" };
    private static readonly uint[] _getAccountResponseFieldTags = new uint[] { 10, 16 };
    public static GetAccountResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAccountResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAccountResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::swgemurpcserver.rpc.AccountRequest.internal__static_swgemurpcserver_rpc_GetAccountResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAccountResponse, GetAccountResponse.Builder> InternalFieldAccessors {
      get { return global::swgemurpcserver.rpc.AccountRequest.internal__static_swgemurpcserver_rpc_GetAccountResponse__FieldAccessorTable; }
    }
    
    public const int AccountsFieldNumber = 1;
    private pbc::PopsicleList<global::swgemurpcserver.rpc.SWGEmuAccount> accounts_ = new pbc::PopsicleList<global::swgemurpcserver.rpc.SWGEmuAccount>();
    public scg::IList<global::swgemurpcserver.rpc.SWGEmuAccount> AccountsList {
      get { return accounts_; }
    }
    public int AccountsCount {
      get { return accounts_.Count; }
    }
    public global::swgemurpcserver.rpc.SWGEmuAccount GetAccounts(int index) {
      return accounts_[index];
    }
    
    public const int ValidPasswordFieldNumber = 2;
    private bool hasValidPassword;
    private bool validPassword_;
    public bool HasValidPassword {
      get { return hasValidPassword; }
    }
    public bool ValidPassword {
      get { return validPassword_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::swgemurpcserver.rpc.SWGEmuAccount element in AccountsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAccountResponseFieldNames;
      if (accounts_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], accounts_);
      }
      if (hasValidPassword) {
        output.WriteBool(2, field_names[1], ValidPassword);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::swgemurpcserver.rpc.SWGEmuAccount element in AccountsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasValidPassword) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, ValidPassword);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAccountResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAccountResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAccountResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAccountResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAccountResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAccountResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAccountResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAccountResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAccountResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAccountResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAccountResponse MakeReadOnly() {
      accounts_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAccountResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAccountResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAccountResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAccountResponse result;
      
      private GetAccountResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAccountResponse original = result;
          result = new GetAccountResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAccountResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::swgemurpcserver.rpc.GetAccountResponse.Descriptor; }
      }
      
      public override GetAccountResponse DefaultInstanceForType {
        get { return global::swgemurpcserver.rpc.GetAccountResponse.DefaultInstance; }
      }
      
      public override GetAccountResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAccountResponse) {
          return MergeFrom((GetAccountResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAccountResponse other) {
        if (other == global::swgemurpcserver.rpc.GetAccountResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.accounts_.Count != 0) {
          result.accounts_.Add(other.accounts_);
        }
        if (other.HasValidPassword) {
          ValidPassword = other.ValidPassword;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAccountResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAccountResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.accounts_, global::swgemurpcserver.rpc.SWGEmuAccount.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasValidPassword = input.ReadBool(ref result.validPassword_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::swgemurpcserver.rpc.SWGEmuAccount> AccountsList {
        get { return PrepareBuilder().accounts_; }
      }
      public int AccountsCount {
        get { return result.AccountsCount; }
      }
      public global::swgemurpcserver.rpc.SWGEmuAccount GetAccounts(int index) {
        return result.GetAccounts(index);
      }
      public Builder SetAccounts(int index, global::swgemurpcserver.rpc.SWGEmuAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accounts_[index] = value;
        return this;
      }
      public Builder SetAccounts(int index, global::swgemurpcserver.rpc.SWGEmuAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accounts_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAccounts(global::swgemurpcserver.rpc.SWGEmuAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accounts_.Add(value);
        return this;
      }
      public Builder AddAccounts(global::swgemurpcserver.rpc.SWGEmuAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accounts_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAccounts(scg::IEnumerable<global::swgemurpcserver.rpc.SWGEmuAccount> values) {
        PrepareBuilder();
        result.accounts_.Add(values);
        return this;
      }
      public Builder ClearAccounts() {
        PrepareBuilder();
        result.accounts_.Clear();
        return this;
      }
      
      public bool HasValidPassword {
        get { return result.hasValidPassword; }
      }
      public bool ValidPassword {
        get { return result.ValidPassword; }
        set { SetValidPassword(value); }
      }
      public Builder SetValidPassword(bool value) {
        PrepareBuilder();
        result.hasValidPassword = true;
        result.validPassword_ = value;
        return this;
      }
      public Builder ClearValidPassword() {
        PrepareBuilder();
        result.hasValidPassword = false;
        result.validPassword_ = false;
        return this;
      }
    }
    static GetAccountResponse() {
      object.ReferenceEquals(global::swgemurpcserver.rpc.AccountRequest.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class SWGEmuAccountService : pb::IService {
    public abstract void GetAccount(
        pb::IRpcController controller,
        global::swgemurpcserver.rpc.GetAccountRequest request,
        global::System.Action<global::swgemurpcserver.rpc.GetAccountResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return AccountRequest.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.GetAccount(controller, (global::swgemurpcserver.rpc.GetAccountRequest) request,
              pb::RpcUtil.SpecializeCallback<global::swgemurpcserver.rpc.GetAccountResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::swgemurpcserver.rpc.GetAccountRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::swgemurpcserver.rpc.GetAccountResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::swgemurpcserver.rpc.SWGEmuAccountService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void GetAccount(
          pb::IRpcController controller,
          global::swgemurpcserver.rpc.GetAccountRequest request,
          global::System.Action<global::swgemurpcserver.rpc.GetAccountResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::swgemurpcserver.rpc.GetAccountResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::swgemurpcserver.rpc.GetAccountResponse, global::swgemurpcserver.rpc.GetAccountResponse.Builder>(done, global::swgemurpcserver.rpc.GetAccountResponse.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
